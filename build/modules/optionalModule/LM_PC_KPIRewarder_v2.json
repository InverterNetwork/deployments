{
  "abi": [
    {
      "type": "function",
      "name": "ASSERTER_ROLE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "amountPaid",
      "inputs": [
        { "name": "token_", "type": "address", "internalType": "address" },
        { "name": "amount_", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "assertDataFor",
      "inputs": [
        { "name": "dataId", "type": "bytes32", "internalType": "bytes32" },
        { "name": "data_", "type": "bytes32", "internalType": "bytes32" },
        { "name": "asserter", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "assertionId", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "assertionData",
      "inputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [
        { "name": "dataId", "type": "bytes32", "internalType": "bytes32" },
        { "name": "data", "type": "bytes32", "internalType": "bytes32" },
        { "name": "asserter", "type": "address", "internalType": "address" },
        { "name": "resolved", "type": "bool", "internalType": "bool" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertionDisputedCallback",
      "inputs": [
        { "name": "assertionId", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "assertionLiveness",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint64", "internalType": "uint64" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "assertionResolvedCallback",
      "inputs": [
        { "name": "assertionId", "type": "bytes32", "internalType": "bytes32" },
        { "name": "assertedTruthfully", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimRewards",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "collectPaymentOrders",
      "inputs": [],
      "outputs": [
        {
          "name": "paymentOrders_",
          "type": "tuple[]",
          "internalType": "struct IERC20PaymentClientBase_v2.PaymentOrder[]",
          "components": [
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paymentToken",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "originChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "targetChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "flags", "type": "bytes32", "internalType": "bytes32" },
            { "name": "data", "type": "bytes32[]", "internalType": "bytes32[]" }
          ]
        },
        { "name": "tokens_", "type": "address[]", "internalType": "address[]" },
        {
          "name": "totalAmounts_",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createKPI",
      "inputs": [
        { "name": "_continuous", "type": "bool", "internalType": "bool" },
        {
          "name": "_trancheValues",
          "type": "uint256[]",
          "internalType": "uint256[]"
        },
        {
          "name": "_trancheRewards",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "defaultBond",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultCurrency",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IERC20" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "defaultIdentifier",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deleteStuckAssertion",
      "inputs": [
        { "name": "assertionId", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "depositFeeFunds",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAssertion",
      "inputs": [
        { "name": "assertionId", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct IOptimisticOracleIntegrator.DataAssertion",
          "components": [
            { "name": "dataId", "type": "bytes32", "internalType": "bytes32" },
            { "name": "data", "type": "bytes32", "internalType": "bytes32" },
            {
              "name": "asserter",
              "type": "address",
              "internalType": "address"
            },
            { "name": "resolved", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAssertionConfig",
      "inputs": [
        { "name": "assertionId", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ILM_PC_KPIRewarder_v2.RewardRoundConfiguration",
          "components": [
            {
              "name": "creationTime",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "assertedValue",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "KpiToUse",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "distributed", "type": "bool", "internalType": "bool" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAssertionPending",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBalance",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getData",
      "inputs": [
        { "name": "assertionId", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [
        { "name": "", "type": "bool", "internalType": "bool" },
        { "name": "", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getEarned",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getEstimatedReward",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        { "name": "duration", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFlagCount",
      "inputs": [],
      "outputs": [
        { "name": "flagCount_", "type": "uint8", "internalType": "uint8" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFlags",
      "inputs": [],
      "outputs": [
        { "name": "flags_", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKPI",
      "inputs": [
        { "name": "KPInum", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ILM_PC_KPIRewarder_v2.KPI",
          "components": [
            {
              "name": "numOfTranches",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "totalRewards",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "continuous", "type": "bool", "internalType": "bool" },
            {
              "name": "trancheValues",
              "type": "uint256[]",
              "internalType": "uint256[]"
            },
            {
              "name": "trancheRewards",
              "type": "uint256[]",
              "internalType": "uint256[]"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getKPICounter",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLastUpdate",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRewardRate",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRewardValue",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRewardsEnd",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStakingToken",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTotalSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantModuleRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "target", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "grantModuleRoleBatched",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "targets", "type": "address[]", "internalType": "address[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "identifier",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "init",
      "inputs": [
        {
          "name": "orchestrator_",
          "type": "address",
          "internalType": "contract IOrchestrator_v1"
        },
        {
          "name": "metadata",
          "type": "tuple",
          "internalType": "struct IModule_v1.Metadata",
          "components": [
            {
              "name": "majorVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minorVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "patchVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "url", "type": "string", "internalType": "string" },
            { "name": "title", "type": "string", "internalType": "string" }
          ]
        },
        { "name": "configData", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isTrustedForwarder",
      "inputs": [
        { "name": "forwarder", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "oo",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract OptimisticOracleV3Interface"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "orchestrator",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IOrchestrator_v1"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "outstandingTokenAmount",
      "inputs": [
        { "name": "token_", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "total_", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "paymentOrders",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct IERC20PaymentClientBase_v2.PaymentOrder[]",
          "components": [
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "paymentToken",
              "type": "address",
              "internalType": "address"
            },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            {
              "name": "originChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "targetChainId",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "flags", "type": "bytes32", "internalType": "bytes32" },
            { "name": "data", "type": "bytes32[]", "internalType": "bytes32[]" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "postAssertion",
      "inputs": [
        { "name": "dataId", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "assertedValue",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "asserter", "type": "address", "internalType": "address" },
        { "name": "targetKPI", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "assertionId", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeModuleRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "target", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeModuleRoleBatched",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "targets", "type": "address[]", "internalType": "address[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDefaultAssertionLiveness",
      "inputs": [
        { "name": "_newLiveness", "type": "uint64", "internalType": "uint64" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setDefaultCurrencyAndBond",
      "inputs": [
        {
          "name": "_newCurrency",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_newBond", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOptimisticOracle",
      "inputs": [
        { "name": "_newOO", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setRewards",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        { "name": "duration", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "stake",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "title",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustedForwarder",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "unstake",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "url",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "version",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "DataAsserted",
      "inputs": [
        {
          "name": "dataId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "asserter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DataAssertionResolved",
      "inputs": [
        {
          "name": "assertedTruthfully",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "dataId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "asserter",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DeletedStuckAssertion",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "FeeFundsDeposited",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "FlagsSet",
      "inputs": [
        {
          "name": "flagCount",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        },
        {
          "name": "newFlags",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "KPICreated",
      "inputs": [
        {
          "name": "KPI_Id",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "numOfTranches",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "totalKPIRewards",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "continuous",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "trancheValues",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        },
        {
          "name": "trancheRewards",
          "type": "uint256[]",
          "indexed": false,
          "internalType": "uint256[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ModuleInitialized",
      "inputs": [
        {
          "name": "parentOrchestrator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "metadata",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct IModule_v1.Metadata",
          "components": [
            {
              "name": "majorVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "minorVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "patchVersion",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "url", "type": "string", "internalType": "string" },
            { "name": "title", "type": "string", "internalType": "string" }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PaymentOrderAdded",
      "inputs": [
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "originChainId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "targetChainId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "flags",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "data",
          "type": "bytes32[]",
          "indexed": false,
          "internalType": "bytes32[]"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ProtocolFeeTransferred",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "treasury",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "feeAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardRoundConfigured",
      "inputs": [
        {
          "name": "assertionId",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        },
        {
          "name": "creationTime",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "assertedValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "KpiToUse",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardSet",
      "inputs": [
        {
          "name": "rewardAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "duration",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newRewardRate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "newRewardsEnd",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsDistributed",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Staked",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "StakingTokenSet",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unstaked",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Updated",
      "inputs": [
        {
          "name": "triggerAddress",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "rewardValue",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "lastUpdate",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "earnedRewards",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    {
      "type": "error",
      "name": "Module_OrchestratorCallbackFailed",
      "inputs": [
        { "name": "funcSig", "type": "string", "internalType": "string" }
      ]
    },
    {
      "type": "error",
      "name": "Module__CallerNotAuthorized",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__CallerNotAuthorized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InsufficientFunds",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InvalidAmount",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InvalidPaymentOrder",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InvalidRecipient",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__InvalidToken",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__MismatchBetweenFlagCountAndArrayLength",
      "inputs": [
        { "name": "flagCount", "type": "uint8", "internalType": "uint8" },
        { "name": "arrayLength", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase__TokenTransferFailed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__ERC20PaymentClientBase_v2__FlagAmountTooHigh",
      "inputs": []
    },
    { "type": "error", "name": "Module__InvalidAddress", "inputs": [] },
    { "type": "error", "name": "Module__InvalidMetadata", "inputs": [] },
    {
      "type": "error",
      "name": "Module__InvalidOrchestratorAddress",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v2__AssertionNotStuck",
      "inputs": [
        { "name": "assertionId", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v2__CannotStakeWhenAssertionPending",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v2__InvalidKPINumber",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v2__InvalidKPITrancheValues",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v2__InvalidKPIValueLengths",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v2__InvalidTrancheNumber",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v2__ModuleCannotUseStakingTokenAsBond",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v2__NonExistentAssertionId",
      "inputs": [
        { "name": "assertionId", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    {
      "type": "error",
      "name": "Module__LM_PC_KPIRewarder_v2__UnresolvedAssertionExists",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_Staking_v2__InvalidDuration",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_Staking_v2__InvalidRewardRate",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__LM_PC_Staking_v2__InvalidStakingToken",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OnlyCallableByOrchestrator",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OnlyCallableByPaymentClient",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator_InsufficientFundsToPayForBond",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__CallerNotOO",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__CurrencyBondTooLow",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__InvalidDefaultCurrency",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__InvalidDefaultLiveness",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Module__OptimisticOracleIntegrator__InvalidOOInstance",
      "inputs": []
    },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1461:13695:155:-:0;;;;;;;;;;;;-1:-1:-1;5368:1:122;1621:37:24;;5382:22:122::1;:20;:22::i;:::-;1461:13695:155::0;;7711:422:26;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:26;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:26;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:26;-1:-1:-1;;;;;8035:33:26;;;;;8087:29;;158:50:298;;;8087:29:26;;146:2:298;131:18;8087:29:26;;;;;;;7981:146;7760:373;7711:422::o;14:200:298:-;1461:13695:155;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1461:13695:155:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1651:377;;;;;;:::i;:::-;;:::i;:::-;;;470:14:298;;463:22;445:41;;433:2;418:18;1651:377:155;;;;;;;;6178:88:158;6249:10;;6178:88;;;643:25:298;;;631:2;616:18;6178:88:158;497:177:298;6336:1635:155;;;;;;:::i;:::-;;:::i;6310:90:158:-;6382:11;;6310:90;;2567:29:161;;;;;-1:-1:-1;;;;;2567:29:161;;;;;;-1:-1:-1;;;;;1657:55:298;;;1639:74;;1627:2;1612:18;2567:29:161;1477:242:298;8284:246:122;;;;;;:::i;:::-;;:::i;:::-;;7769:244;;;;;;:::i;:::-;;:::i;3171:54:161:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3171:54:161;;;-1:-1:-1;;;3171:54:161;;;;;;;;;;;;;;;3016:25:298;;;3072:2;3057:18;;3050:34;;;;-1:-1:-1;;;;;3120:55:298;3115:2;3100:18;;3093:83;3219:14;3212:22;3207:2;3192:18;;3185:50;3003:3;2988:19;;2791:450;7152:698:158;;;;;;:::i;:::-;;:::i;5661:184:159:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5806:32:159;5772:11;5806:32;;;:24;:32;;;;;;;5661:184;7894:171:158;;;:::i;7150:100:122:-;;;:::i;:::-;;;;;;;:::i;6444:88:158:-;6515:10;;6444:88;;4420:206:161;;;;;;:::i;:::-;;:::i;:::-;;;;4632:14:298;;4625:22;4607:41;;4679:2;4664:18;;4657:34;;;;4580:18;4420:206:161;4439:258:298;6756:224:122;6845:17;:30;6889;;6933;;6756:224;;;4904:25:298;;;4960:2;4945:18;;4938:34;;;;4988:18;;;4981:34;4892:2;4877:18;6756:224:122;4702:319:298;7017:96:122;;;:::i;12809:237::-;;;;;;:::i;:::-;;:::i;5004:188:161:-;;;;;;:::i;:::-;;:::i;8201:291:155:-;;;;;;:::i;:::-;;:::i;8109:145:158:-;;;;;;:::i;:::-;;:::i;5499:88:155:-;5570:10;;5499:88;;7537:195:122;;;;;;:::i;:::-;;:::i;9027:89:159:-;9102:6;;9027:89;;5462:146;;;:::i;:::-;;;;;;;:::i;5108:110:155:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6602:117:122:-;;;:::i;13399:210::-;;;:::i;6046:88:158:-;6117:10;;6046:88;;5419:166:161;;;;;;:::i;:::-;;:::i;2715:23::-;;;;;;5635:100:155;5712:16;;;;5635:100;;4793:124:158;;;;;;:::i;:::-;;:::i;4680:164:161:-;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4811:26:161;;;;:13;:26;;;;;;;;;4804:33;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4804:33:161;;;;;;;;;-1:-1:-1;;;4804:33:161;;;;;;;;;;;;4680:164;;;;;;;9555:13:298;;9537:32;;9625:4;9613:17;;;9607:24;9585:20;;;9578:54;9692:4;9680:17;;;9674:24;-1:-1:-1;;;;;9670:73:298;9648:20;;;9641:103;9814:4;9802:17;;;9796:24;9789:32;9782:40;9760:20;;;9753:70;;;;9524:3;9509:19;;9326:503;2828:37:161;;;;;-1:-1:-1;;;;;2828:37:161;;;7691:3148;;;;;;:::i;:::-;;:::i;5266:185:155:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;10741:13:298;;10723:32;;10811:4;10799:17;;;10793:24;10771:20;;;10764:54;10874:4;10862:17;;;10856:24;10834:20;;;10827:54;10951:4;10939:17;;;10933:24;10926:32;10919:40;10897:20;;;10890:70;;;;10710:3;10695:19;;10490:476;5773:95:158;5849:12;;-1:-1:-1;;;;;5849:12:158;5773:95;;10144:559:155;;;;;;:::i;:::-;;:::i;8541:433:159:-;;;;;;:::i;:::-;;:::i;4244:712:155:-;;;;;;:::i;:::-;;:::i;7287:108:122:-;7332:16;7367:21;-1:-1:-1;;;;;7367:21:122;7287:108;;2943:31:161;;;;;-1:-1:-1;;;2943:31:161;;;;;;;;;14110:18:298;14098:31;;;14080:50;;14068:2;14053:18;2943:31:161;13936:200:298;8540:1402:155;;;;;;:::i;:::-;;:::i;8050:197:122:-;;;;;;:::i;:::-;;:::i;2325:66:161:-;;2365:26;2325:66;;5246:119;;;;;;:::i;:::-;;:::i;5898:2590:159:-;;;:::i;:::-;;;;;;;;;:::i;5912:90:158:-;5984:11;;5912:90;;9169:97:159;9249:10;;9169:97;;9249:10;;;;16417:36:298;;16405:2;16390:18;9169:97:159;16275:184:298;15053:101:155;;;;;;:::i;:::-;7152:698:158;;3098:32:161;;;;;;10751:1094:155;;;;;;:::i;:::-;;:::i;12034:2804::-;;;;;;:::i;:::-;;:::i;4648:101:158:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4728:14:158;4705:4;4728:14;;;:8;:14;;;;;;;4648:101;4961:768;;;;;;:::i;:::-;;:::i;1651:377:155:-;1822:4;-1:-1:-1;;;;;;1849:54:155;;-1:-1:-1;;;1849:54:155;;:120;;-1:-1:-1;;;;;;;1919:50:155;;-1:-1:-1;;;1919:50:155;1849:120;:172;;;;1985:36;2009:11;1985:23;:36::i;:::-;1842:179;1651:377;-1:-1:-1;;1651:377:155:o;6336:1635::-;6513:19;2365:26:161;4036:168:122;4068:21;;;;;;;;-1:-1:-1;;;;;4068:21:122;-1:-1:-1;;;;;4068:32:122;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:100;;-1:-1:-1;;;4068:100:122;;4143:4;4068:100;;;17232:74:298;17322:18;;;17315:34;;;-1:-1:-1;;;;;4068:49:122;;;;;;;17205:18:298;;4068:100:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4182:12;:10;:12::i;:::-;4036:18;:168::i;:::-;6648:16:155::1;::::0;::::1;;6644:111;;;6687:57;;-1:-1:-1::0;;;6687:57:155::1;;;;;;;;;;;6644:111;-1:-1:-1::0;;;;;7082:25:155;::::1;7102:4;7082:25;:85:::0;::::1;;;-1:-1:-1::0;7155:12:155::1;::::0;7135:15:::1;::::0;-1:-1:-1;;;;;7135:15:155;;::::1;7155:12:::0;::::1;7127:40;7082:85;7065:226;;;7215:65;;-1:-1:-1::0;;;7215:65:155::1;;;;;;;;;;;7065:226;7364:10;::::0;:15;;:42:::1;;;7396:10;;7383:9;:23;;7364:42;7360:128;;;7429:48;;-1:-1:-1::0;;;7429:48:155::1;;;;;;;;;;;7360:128;7623:55;7637:6:::0;7653:13;7669:8;7623:13:::1;:55::i;:::-;7719:96;::::0;;::::1;::::0;::::1;::::0;;7757:15:::1;7719:96:::0;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;7719:96:155;;;;;;7688:28;;;:15:::1;:28:::0;;;;;;:127;;;;;;7719:96;7688:127;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;7688:127:155::1;::::0;::::1;;::::0;;;::::1;::::0;;;7831:99;;17723:25:298;;;17764:18;;;17757:34;;;7688:28:155;;-1:-1:-1;7719:96:155;;7688:28;;7831:99:::1;::::0;17696:18:298;7831:99:155::1;;;;;;;-1:-1:-1::0;7941:16:155::1;:23:::0;;-1:-1:-1;;7941:23:155::1;7960:4;7941:23;::::0;;6336:1635;;-1:-1:-1;;;;6336:1635:155:o;8284:246:122:-;4401:18;4422:21;;:34;;;-1:-1:-1;;;4422:34:122;;;;8404:4;;4401:18;-1:-1:-1;;;;;4422:21:122;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;4422:92:122;;4493:4;4422:92;;;17232:74:298;17322:18;;;17315:34;;;-1:-1:-1;;;;;4422:49:122;;;;;;;17205:18:298;;4422:92:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4401:113;;4524:127;4556:21;;;;;;;;-1:-1:-1;;;;;4556:21:122;-1:-1:-1;;;;;4556:32:122;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4556:47:122;;4604:10;4556:59;;;;;;;;;;;;;643:25:298;;631:2;616:18;;497:177;4524:127:122;8424:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;8424:21:122::1;-1:-1:-1::0;;;;;8424:32:122::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8424:62:122::1;;8500:4;8506:7;;8424:99;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4391:278:::0;8284:246;;;;:::o;7769:244::-;4401:18;4422:21;;:34;;;-1:-1:-1;;;4422:34:122;;;;7888:4;;4401:18;-1:-1:-1;;;;;4422:21:122;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;4422:92:122;;4493:4;4422:92;;;17232:74:298;17322:18;;;17315:34;;;-1:-1:-1;;;;;4422:49:122;;;;;;;17205:18:298;;4422:92:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4401:113;;4524:127;4556:21;;;;;;;;-1:-1:-1;;;;;4556:21:122;-1:-1:-1;;;;;4556:32:122;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4524:127;7908:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;7908:21:122::1;-1:-1:-1::0;;;;;7908:32:122::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7908:61:122::1;;7983:4;7989:7;;7908:98;;;;;;;;;;;;;;;;;:::i;7152:698:158:-:0;3251:21:29;:19;:21::i;:::-;7256:6:158::1;2296:26:159;2315:6;2296:18;:26::i;:::-;7278:14:158::2;7295:12;:10;:12::i;:::-;7278:29;;7383:15;7391:6;7383:7;:15::i;:::-;-1:-1:-1::0;;;;;7448:16:158;::::2;;::::0;;;:8:::2;:16;::::0;;;;:26;;7468:6;;7448:16;:26:::2;::::0;7468:6;;7448:26:::2;:::i;:::-;;;;;;;;7527:6;7512:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7592:12:158::2;::::0;7585:49:::2;::::0;-1:-1:-1;;;;;7592:12:158::2;7619:6:::0;7627;7585:33:::2;:49::i;:::-;-1:-1:-1::0;;;;;7693:19:158;::::2;;::::0;;;:11:::2;:19;::::0;;;;;:24;7689:115:::2;;7767:26;7786:6;7767:18;:26::i;:::-;7828:6;-1:-1:-1::0;;;;;7819:24:158::2;;7836:6;7819:24;;;;643:25:298::0;;631:2;616:18;;497:177;7819:24:158::2;;;;;;;;7268:582;3282:1:29::1;3293:20:::0;1805:1;2388:30;3969:23;3716:283;7894:171:158;3251:21:29;:19;:21::i;:::-;7958:17:158::1;7978:12;:10;:12::i;:::-;7958:32;;8001:18;8009:9;8001:7;:18::i;:::-;8029:29;8048:9;8029:18;:29::i;:::-;7948:117;3293:20:29::0;1805:1;2388:30;3969:23;3716:283;3293:20;7894:171:158:o;7150:100:122:-;7188:13;7220:17;:23;;7213:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7150:100;:::o;4420:206:161:-;4479:4;4509:26;;;:13;:26;;;;;:35;;;4479:4;;-1:-1:-1;;;4509:35:161;;;;4504:59;;-1:-1:-1;4554:5:161;;;;-1:-1:-1;4420:206:161;-1:-1:-1;4420:206:161:o;4504:59::-;-1:-1:-1;;4587:26:161;;;;:13;:26;;;;;4581:4;4587:31;;;;4581:4;;4420:206::o;7017:96:122:-;7053:13;7085:17;:21;;7078:28;;;;;:::i;12809:237::-;12961:4;12988:21;;:51;;-1:-1:-1;;;12988:51:122;;-1:-1:-1;;;;;1657:55:298;;;12988:51:122;;;1639:74:298;12988:21:122;;;;:40;;1612:18:298;;12988:51:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5004:188:161:-;3461:21:122;;:34;;;-1:-1:-1;;;3461:34:122;;;;3429:105;;-1:-1:-1;;;;;3461:21:122;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3461:47:122;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:105;5135:50:161::1;5162:12;5176:8;5135:26;:50::i;:::-;5004:188:::0;;:::o;8201:291:155:-;3461:21:122;;:34;;;-1:-1:-1;;;3461:34:122;;;;3429:105;;-1:-1:-1;;;;;3461:21:122;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3429:105;3251:21:29::1;:19;:21::i;:::-;8327:6:155::2;2296:26:159;2315:6;2296:18;:26::i;:::-;8349:69:155::3;8382:12;:10;:12::i;:::-;8349:15;::::0;-1:-1:-1;;;;;8349:15:155::3;::::0;8404:4:::3;8411:6:::0;8349:32:::3;:69::i;:::-;8460:15;::::0;8434:51:::3;::::0;643:25:298;;;-1:-1:-1;;;;;8460:15:155;;::::3;::::0;8434:51:::3;::::0;631:2:298;616:18;8434:51:155::3;;;;;;;3282:1:29::2;3293:20:::1;1805:1:::0;2388:30;3969:23;3716:283;8109:145:158;3461:21:122;;:34;;;-1:-1:-1;;;3461:34:122;;;;3429:105;;-1:-1:-1;;;;;3461:21:122;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3429:105;8218:29:158::1;8230:6;8238:8;8218:11;:29::i;7537:195:122:-:0;4401:18;4422:21;;:34;;;-1:-1:-1;;;4422:34:122;;;;7637:4;;4401:18;-1:-1:-1;;;;;4422:21:122;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;4422:92:122;;4493:4;4422:92;;;17232:74:298;17322:18;;;17315:34;;;-1:-1:-1;;;;;4422:49:122;;;;;;;17205:18:298;;4422:92:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4401:113;;4524:127;4556:21;;;;;;;;-1:-1:-1;;;;;4556:21:122;-1:-1:-1;;;;;4556:32:122;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4524:127;7657:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;7657:21:122::1;-1:-1:-1::0;;;;;7657:32:122::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;::::0;-1:-1:-1;;;7657:68:122;;::::1;::::0;::::1;19817:25:298::0;;;-1:-1:-1;;;;;19878:55:298;;;19858:18;;;19851:83;7657:54:122;;;::::1;::::0;::::1;::::0;19790:18:298;;7657:68:122::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4391:278:::0;7537:195;;;:::o;5462:146:159:-;5550:21;5594:7;5587:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5587:14:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5462:146;:::o;5108:110:155:-;5160:10;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5160:10:155;5189:22;;;;:14;:22;;;;;;;;;5182:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5189:22;;5182:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5108:110;;;:::o;6602:117:122:-;6645:7;6671:41;6694:17;6671:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:41::i;:::-;6664:48;;6602:117;:::o;13399:210::-;13532:7;13562:21;;;;;;;;;-1:-1:-1;;;;;13562:21:122;-1:-1:-1;;;;;13562:38:122;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5419:166:161:-;3461:21:122;;:34;;;-1:-1:-1;;;3461:34:122;;;;3429:105;;-1:-1:-1;;;;;3461:21:122;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3429:105;5536:42:161::1;5565:12;5536:28;:42::i;4793:124:158:-:0;4849:4;4872:38;4880:4;4886:23;:21;:23::i;:::-;4872:7;:38::i;7691:3148:161:-;7849:19;2365:26;4036:168:122;4068:21;;;;;;;;-1:-1:-1;;;;;4068:21:122;-1:-1:-1;;;;;4068:32:122;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4036:168;-1:-1:-1;;;;;7895:22:161;::::1;::::0;:48:::1;;7935:8;7895:48;;;7920:12;:10;:12::i;:::-;7884:59:::0;-1:-1:-1;7977:4:161::1;-1:-1:-1::0;;;;;7957:25:161;::::1;::::0;7953:1143:::1;;8090:11;::::0;8047:15:::1;::::0;:40:::1;::::0;-1:-1:-1;;;8047:40:161;;8081:4:::1;8047:40;::::0;::::1;1639:74:298::0;-1:-1:-1;;;;;8047:15:161;;::::1;::::0;:25:::1;::::0;1612:18:298;;8047:40:161::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;8043:203;;;8148:83;;-1:-1:-1::0;;;8148:83:161::1;;;;;;;;;;;8043:203;7953:1143;;;8320:15;::::0;8527:11:::1;::::0;8359:197:::1;::::0;;-1:-1:-1;;;;;20814:15:298;;;8359:197:161::1;::::0;::::1;20796:34:298::0;8500:4:161::1;20846:18:298::0;;;20839:43;20898:18;;;;20891:34;;;;8359:197:161;;;;;;;;;;20708:18:298;;;;8359:197:161;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;8359:197:161::1;-1:-1:-1::0;;;8359:197:161::1;::::0;;8312:258;;-1:-1:-1;;;;8320:15:161;::::1;::::0;8312:258:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8276:294;;;;8806:7;8805:8;:58;;;;8832:1;8818:4;:11;:15;:44;;;;;8849:4;8838:24;;;;;;;;;;;;:::i;:::-;8837:25;8818:44;8805:123;;;-1:-1:-1::0;8895:15:161::1;::::0;-1:-1:-1;;;;;8895:15:161::1;8887:36;:41:::0;8805:123:::1;8784:302;;;8988:83;;-1:-1:-1::0;;;8988:83:161::1;;;;;;;;;;;8784:302;8262:834;;7953:1143;9151:2;::::0;9156:11:::1;::::0;9105:15:::1;::::0;:63:::1;::::0;-1:-1:-1;;;;;9105:15:161;;::::1;::::0;9151:2;::::1;::::0;9105:37:::1;:63::i;:::-;9783:2;::::0;-1:-1:-1;;;;;9783:2:161::1;:14;9950:28;9972:5:::0;9950:21:::1;:28::i;:::-;10031:29;10053:6;10031:21;:29::i;:::-;10115:38;10144:8;10115:28;:38::i;:::-;10206:42;10232:15;10206:25;:42::i;:::-;10321:43;10358:4;10321:28;:43::i;:::-;9811:597;;;;;;;;;;;;:::i;:::-;;::::0;;;;::::1;-1:-1:-1::0;;9811:597:161;;;;;;;10521:17:::1;::::0;10552:15:::1;::::0;10581:11:::1;::::0;10606:17:::1;::::0;9783:888:::1;::::0;;;-1:-1:-1;;;;;;9783:888:161;;;::::1;::::0;10422:8;;10452:4:::1;::::0;10479:1:::1;::::0;-1:-1:-1;;;10521:17:161;;::::1;;;::::0;-1:-1:-1;;;;;10552:15:161;;::::1;::::0;10479:1;;9783:888:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10722:45;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;10722:45:161;;::::1;::::0;;;;;;-1:-1:-1;10722:45:161;;;;;;10681:26;;;:13:::1;:26:::0;;;;;;:86;;;;;;10722:45;10681:86;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;::::1;;-1:-1:-1::0;;;10681:86:161::1;-1:-1:-1::0;;10681:86:161;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;10782:50;;9769:902;;-1:-1:-1;9769:902:161;;10736:6;;10782:50:::1;::::0;::::1;::::0;10744:5;643:25:298;;631:2;616:18;;497:177;10782:50:161::1;;;;;;;;7691:3148:::0;;;;;;:::o;5266:185:155:-;5362:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5362:31:155;-1:-1:-1;5416:28:155;;;;:15;:28;;;;;;;;;5409:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5266:185::o;10144:559::-;3251:21:29;:19;:21::i;:::-;10247:6:155::1;2296:26:159;2315:6;2296:18;:26::i;:::-;10373:16:155::2;::::0;::::2;;10369:130;;;10412:76;;-1:-1:-1::0;;;10412:76:155::2;;;;;;;;;;;10369:130;10509:14;10526:12;:10;:12::i;:::-;10509:29;;10549:22;10556:6;10564;10549;:22::i;:::-;10635:12;::::0;10628:68:::2;::::0;-1:-1:-1;;;;;10635:12:155::2;10666:6:::0;10682:4:::2;10689:6:::0;10628:37:::2;:68::i;:::-;10259:444;3282:1:29::1;3293:20:::0;1805:1;2388:30;3969:23;3716:283;8541:433:159;8691:65;8742:12;:10;:12::i;:::-;8691:29;:65::i;:::-;8686:165;;8787:53;;-1:-1:-1;;;8787:53:159;;;;;;;;;;;8686:165;-1:-1:-1;;;;;8924:32:159;;;;;;:24;:32;;;;;:43;;8960:7;;8924:32;:43;;8960:7;;8924:43;:::i;:::-;;;;-1:-1:-1;;;;8541:433:159:o;4244:712:155:-;8870:21:26;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:26;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:26;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:26;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;5013:22:26;;;;;4979:67;4501:38:155::1;4515:13;4530:8;4501:13;:38::i;:::-;4564:24;4602:20:::0;4636:16:::1;4666:14:::0;4694:15:::1;4733:10;4722:65;;;;;;;;;;;;:::i;:::-;4550:237;;;;;;;;;;4798:41;4822:16;4798:23;:41::i;:::-;4849:100;4896:12;4910:11;4923:6;4931:8;4849:33;:100::i;:::-;4491:465;;;;;5070:14:26::0;5066:101;;;5100:23;;-1:-1:-1;;5100:23:26;;;5142:14;;-1:-1:-1;14080:50:298;;5142:14:26;;14068:2:298;14053:18;5142:14:26;;;;;;;4092:1081;;;;;4244:712:155;;;:::o;8540:1402::-;8712:4;3461:21:122;;:34;;;-1:-1:-1;;;3461:34:122;;;;3429:105;;-1:-1:-1;;;;;3461:21:122;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3429:105;8750:14:155;8803:1:::1;8786:18:::0;::::1;::::0;:41:::1;;;8825:2;8808:14;:19;8786:41;8782:131;;;8850:52;;-1:-1:-1::0;;;8850:52:155::1;;;;;;;;;;;8782:131;8927:40:::0;;::::1;8923:132;;8990:54;;-1:-1:-1::0;;;8990:54:155::1;;;;;;;;;;;8923:132;9065:21;9089:15;;9105:1;9089:18;;;;;;;:::i;:::-;;;;;;;9065:42;;9138:1;9121:14;:18;9117:351;;;9169:1;9155:303;9176:14;9172:1;:18;9155:303;;;9244:14;;9259:1;9244:17;;;;;;;:::i;:::-;;;;;;;9219:14;;9238:1;9234;:5;;;;:::i;:::-;9219:21;;;;;;;:::i;:::-;;;;;;;:42;9215:172;;9292:76;;-1:-1:-1::0;;;9292:76:155::1;;;;;;;;;;;9215:172;9425:15;;9441:1;9425:18;;;;;;;:::i;:::-;;;;;;;9405:38;;;;;:::i;:::-;::::0;-1:-1:-1;9192:3:155::1;;9155:303;;;;9117:351;9478:11;9492:10;;9478:24;;9538:153;;;;;;;;9555:14;9538:153;;;;9583:16;9538:153;;;;9613:11;9538:153;;;;;;9638:14;;9538:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;9538:153:155;;;-1:-1:-1;9538:153:155::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;9666:15;;;;;;9538:153;::::1;::::0;9666:15;;9538:153;9666:15;9538:153;::::1;;::::0;::::1;::::0;;;-1:-1:-1;9538:153:155;;;;-1:-1:-1;;9513:22:155;;;:14:::1;:22;::::0;;;;;;;;:178;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;9513:178:155::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;:22;;-1:-1:-1;9513:178:155::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;9513:178:155::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;9701:10:155::1;:12:::0;;;-1:-1:-1;9701:10:155::1;:12;::::0;::::1;:::i;:::-;;;;;;9753:6;9729:180;9773:14;9801:16;9831:11;9856:14;;9884:15;;9729:180;;;;;;;;;;;;:::i;:::-;;;;;;;;9928:6:::0;8540:1402;-1:-1:-1;;;;;;;;8540:1402:155:o;8050:197:122:-;4401:18;4422:21;;:34;;;-1:-1:-1;;;4422:34:122;;;;8151:4;;4401:18;-1:-1:-1;;;;;4422:21:122;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:92;;-1:-1:-1;;;4422:92:122;;4493:4;4422:92;;;17232:74:298;17322:18;;;17315:34;;;-1:-1:-1;;;;;4422:49:122;;;;;;;17205:18:298;;4422:92:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4401:113;;4524:127;4556:21;;;;;;;;-1:-1:-1;;;;;4556:21:122;-1:-1:-1;;;;;4556:32:122;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4524:127;8171:21:::1;::::0;::::1;;;;;;-1:-1:-1::0;;;;;8171:21:122::1;-1:-1:-1::0;;;;;8171:32:122::1;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;::::0;-1:-1:-1;;;8171:69:122;;::::1;::::0;::::1;19817:25:298::0;;;-1:-1:-1;;;;;19878:55:298;;;19858:18;;;19851:83;8171:55:122;;;::::1;::::0;::::1;::::0;19790:18:298;;8171:69:122::1;19643:297:298::0;5246:119:161;3461:21:122;;:34;;;-1:-1:-1;;;3461:34:122;;;;3429:105;;-1:-1:-1;;;;;3461:21:122;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3429:105;5330:28:161::1;5351:6;5330:20;:28::i;5898:2590:159:-:0;5993:36;6043:24;6081:27;6206:65;6257:12;:10;:12::i;6206:65::-;6201:165;;6302:53;;-1:-1:-1;;;6302:53:159;;;;;;;;;;;6201:165;6446:7;:14;6426:17;;6446:14;6529:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6529:27:159;;6496:60;;6566:28;6608:12;6597:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6597:24:159;;6566:55;;6667:12;6648:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6648:32:159;;;;;;;;;;;;;;;;;6631:49;;6696:6;6691:658;6708:12;6704:1;:16;6691:658;;;6761:7;6769:1;6761:10;;;;;;;;:::i;:::-;;;;;;;;;;6741:30;;;;;;;;6761:10;;;;;;;6741:30;;-1:-1:-1;;;;;6741:30:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6761:10;;6741:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;6756:1;6741:17;;;;;;;;:::i;:::-;;;;;;:30;;;;6785:10;6814:6;6809:202;6826:10;6822:1;:14;6809:202;;;6885:14;6900:1;6885:17;;;;;;;;:::i;:::-;;;;;;;:30;;;-1:-1:-1;;;;;6865:50:159;:13;6879:1;6865:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6865:50:159;;6861:136;;6947:4;6939:12;;6973:5;;6861:136;6838:3;;6809:202;;;;7029:5;7024:315;;7141:14;7156:1;7141:17;;;;;;;;:::i;:::-;;;;;;;:30;;;7113:13;7127:10;7113:25;;;;;;;;:::i;:::-;;;;;;:58;-1:-1:-1;;;;;7113:58:159;;;-1:-1:-1;;;;;7113:58:159;;;;;7238:24;:56;7263:14;7278:1;7263:17;;;;;;;;:::i;:::-;;;;;;;:30;;;-1:-1:-1;;;;;7238:56:159;-1:-1:-1;;;;;7238:56:159;;;;;;;;;;;;;7189:14;7204:10;7189:26;;;;;;;;:::i;:::-;;;;;;;;;;:105;7312:12;;;;:::i;:::-;;;;7024:315;-1:-1:-1;6722:3:159;;6691:658;;;-1:-1:-1;7401:14:159;7408:7;;7401:14;:::i;:::-;7503:10;7489:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7489:25:159;;7479:35;;7551:10;7540:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7540:22:159;;7524:38;;7578:6;7573:754;7590:10;7586:1;:14;7573:754;;;7634:13;7648:1;7634:16;;;;;;;;:::i;:::-;;;;;;;7621:7;7629:1;7621:10;;;;;;;;:::i;:::-;;;;;;:29;-1:-1:-1;;;;;7621:29:159;;;-1:-1:-1;;;;;7621:29:159;;;;;7683:14;7698:1;7683:17;;;;;;;;:::i;:::-;;;;;;;7664:13;7678:1;7664:16;;;;;;;;:::i;:::-;;;;;;:36;;;;;7803:99;7863:12;:10;:12::i;:::-;7878:7;7886:1;7878:10;;;;;;;;:::i;:::-;;;;;;;7803:21;:99::i;:::-;8285:31;8305:7;8313:1;8305:10;;;;;;;;:::i;:::-;;;;;;;8285:19;:31::i;:::-;7602:3;;7573:754;;;;8434:47;;;;5898:2590;;;:::o;10751:1094:155:-;3461:21:122;;:34;;;-1:-1:-1;;;3461:34:122;;;;3429:105;;-1:-1:-1;;;;;3461:21:122;;:32;;:34;;;;;;;;;;;;;;:21;:34;;;;;;;;;;;;;;3429:105;11026:3:155::1;10981:26:::0;;;:13:::1;:26;::::0;;;;:33;10977:182:::1;;11053:95;::::0;-1:-1:-1;;;11053:95:155;;::::1;::::0;::::1;643:25:298::0;;;616:18;;11053:95:155::1;;;;;;;;10977:182;11212:2;::::0;:28:::1;::::0;-1:-1:-1;;;11212:28:155;;::::1;::::0;::::1;643:25:298::0;;;11169:28:155::1;::::0;-1:-1:-1;;;;;11212:2:155::1;::::0;:15:::1;::::0;616:18:298;;11212:28:155::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;;11169:86;;;;11289:23;11270:15;:42;11266:140;;11335:60;::::0;-1:-1:-1;;;11335:60:155;;::::1;::::0;::::1;643:25:298::0;;;616:18;;11335:60:155::1;497:177:298::0;11266:140:155::1;11420:2;::::0;:31:::1;::::0;-1:-1:-1;;;11420:31:155;;::::1;::::0;::::1;643:25:298::0;;;-1:-1:-1;;;;;11420:2:155;;::::1;::::0;:18:::1;::::0;616::298;;11420:31:155::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;11416:423;;11662:28;::::0;;;:15:::1;:28;::::0;;;;;;;11655:35;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;11655:35:155;;::::1;::::0;;;11711:13:::1;:26:::0;;;;;;11704:33;;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;11704:33:155;;;11751:16:::1;:24:::0;;;;::::1;::::0;;;11794:34;11678:11;;11794:34:::1;::::0;::::1;5004:188:161::0;;:::o;11416:423:155:-:1;11563:60;::::0;-1:-1:-1;;;11563:60:155;;::::1;::::0;::::1;643:25:298::0;;;616:18;;11563:60:155::1;497:177:298::0;12034:2804:155;12328:3;12283:26;;;:13;:26;;;;;:33;12279:182;;12355:95;;-1:-1:-1;;;12355:95:155;;;;;643:25:298;;;616:18;;12355:95:155;497:177:298;12279:182:155;12552:64;12584:11;12597:18;12552:31;:64::i;:::-;12715:18;12711:1974;;;12959:22;13015:28;;;:15;:28;;;;;;;;:37;;;;;13000:53;;:14;:53;;;;;12959:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13000:53;;12959:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13067:17;13104:6;13099:1246;13116:25;;13112:29;;13099:1246;;;13247:28;;;;:15;:28;;;;;:42;;;13191:25;;;;:28;;13217:1;;13191:28;;;;;;:::i;:::-;;;;;;;:98;13166:1165;;13409:11;:26;;;13436:1;13409:29;;;;;;;;:::i;:::-;;;;;;;13393:45;;;;;:::i;:::-;;;13166:1165;;;13538:11;:22;;;13534:673;;;13639:23;13665:11;:26;;;13692:1;13665:29;;;;;;;;:::i;:::-;;;;;;;13639:55;;13720:17;13768:1;13773;13768:6;:45;;13781:25;;;;13807:5;13811:1;13807;:5;:::i;:::-;13781:32;;;;;;;;:::i;:::-;;;;;;;13768:45;;;13777:1;13768:45;13840:19;13862:28;;;:15;:28;;;;;:71;;;13720:93;;-1:-1:-1;13840:19:155;13862:86;;13720:93;;13862:86;:::i;:::-;13840:108;;13974:15;14051:12;14020:11;:25;;;14046:1;14020:28;;;;;;;;:::i;:::-;;;;;;;:43;;;;:::i;:::-;13974:89;-1:-1:-1;13974:89:155;14135:35;14152:18;14135:14;:35;:::i;:::-;14134:50;;;;:::i;:::-;14090:94;;;;:::i;:::-;;;13562:645;;;;13534:673;14307:5;;13166:1165;13143:3;;13099:1246;;;;14359:28;14371:12;14385:1;14359:11;:28::i;:::-;-1:-1:-1;;14401:28:155;;;;:15;:28;;;;;:40;;:47;;-1:-1:-1;;14401:47:155;14444:4;14401:47;;;12711:1974;;;14646:28;;;;:15;:28;;;;;14639:35;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14639:35:155;;;12711:1974;-1:-1:-1;;14807:16:155;:24;;-1:-1:-1;;14807:24:155;;;12034:2804::o;4961:768:158:-;5124:4;5067:6;2296:26:159;2315:6;2296:18;:26::i;:::-;5097:8:158::1;2166:30;2187:8;2166:20;:30::i;:::-;5227:10:::2;;5209:15;:28;5205:67;;;5260:1;5253:8;;;;5205:67;5358:10;::::0;5329:26:::2;5347:8:::0;5329:15:::2;:26;:::i;:::-;:39;5325:173;;;5472:15;5459:10;;:28;;;;:::i;:::-;5448:39;;5325:173;5544:11;;5559:1;5544:16:::0;5540:120:::2;;5639:10;::::0;5619:17:::2;5628:8:::0;5619:6;:17:::2;:::i;:::-;:30;;;;:::i;:::-;5612:37;;;;5540:120;5711:11;::::0;5697:10:::2;::::0;5677:17:::2;5686:8:::0;5677:6;:17:::2;:::i;:::-;:30;;;;:::i;:::-;5676:46;;;;:::i;:::-;5669:53;;2206:1;2332::159::1;4961:768:158::0;;;;;:::o;1775:391:161:-;1911:4;-1:-1:-1;;;;;;1938:60:161;;-1:-1:-1;;;1938:60:161;;:169;;-1:-1:-1;;;;;;;2014:93:161;;-1:-1:-1;;;2014:93:161;1938:169;:221;;;;2123:36;2147:11;2123:23;:36::i;2327:429:24:-;2389:7;2433:8;3604:2;2524:30;2543:10;2524:18;:30::i;:::-;:71;;;;;2576:19;2558:14;:37;;2524:71;2520:230;;;2634:8;;2643:36;2660:19;2643:14;:36;:::i;:::-;2634:47;;;;;:::i;:::-;2626:56;;;:::i;:::-;2618:65;;2611:72;;;;2327:429;:::o;2520:230::-;966:10:27;2714:25:24;;;;2327:429;:::o;10831:223:122:-;10916:21;;;;;;;;-1:-1:-1;;;;;10916:21:122;-1:-1:-1;;;;;10916:32:122;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;-1:-1:-1;;;10916:59:122;;;;;19817:25:298;;;-1:-1:-1;;;;;19878:55:298;;;19858:18;;;19851:83;10916:47:122;;;;;;;19790:18:298;;10916:59:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10911:137;;10998:39;;-1:-1:-1;;;10998:39:122;;;;;19817:25:298;;;-1:-1:-1;;;;;19878:55:298;;19858:18;;;19851:83;19790:18;;10998:39:122;19643:297:298;3326:384:29;2388:30;3526:9;;-1:-1:-1;;3526:20:29;3522:88;;3569:30;;-1:-1:-1;;;3569:30:29;;;;;;;;;;;3522:88;1847:1;3684:19;;3326:384::o;9786:166:159:-;9854:6;9864:1;9854:11;9850:96;;9888:47;;-1:-1:-1;;;9888:47:159;;;;;;;;;;;9220:743:158;9314:19;9336:23;:21;:23::i;:::-;9369:11;:28;;;9314:45;-1:-1:-1;9443:18:158;9464:33;:31;:33::i;:::-;9507:10;:26;;;9443:54;-1:-1:-1;9599:17:158;-1:-1:-1;;;;;9630:28:158;;;9626:226;;9689:36;9697:14;9713:11;;9689:7;:36::i;:::-;-1:-1:-1;;;;;9739:27:158;;;;;;:11;:27;;;;;;;;:42;;;9830:11;;9795:16;:32;;;;;;:46;9674:51;-1:-1:-1;9626:226:158;9866:90;;;4904:25:298;;;4960:2;4945:18;;4938:34;;;4988:18;;;4981:34;;;-1:-1:-1;;;;;9866:90:158;;;;;4892:2:298;4877:18;9866:90:158;;;;;;;;9270:693;;;9220:743;:::o;1303:160:54:-;1412:43;;-1:-1:-1;;;;;17250:55:298;;;1412:43:54;;;17232:74:298;17322:18;;;17315:34;;;1385:71:54;;1405:5;;1427:14;;;;;17205:18:298;;1412:43:54;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1412:43:54;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;13528:917:158:-;-1:-1:-1;;;;;13651:22:158;;13637:11;13651:22;;;:11;:22;;;;;;;13714:26;;;;13651:22;13637:11;13804:40;13637:11;13827:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13827:16:158;;13804:22;:40::i;:::-;13751:93;;;;13885:368;13915:328;;;;;;;;13957:9;-1:-1:-1;;;;;13915:328:158;;;;;14006:14;7332:16:122;7367:21;-1:-1:-1;;;;;7367:21:122;;7287:108;14006:14:158;-1:-1:-1;;;;;14006:29:158;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14006:37:158;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13915:328:158;;;;;14072:6;13915:328;;;;14111:13;13915:328;;;;14157:13;13915:328;;;;14195:5;13915:328;;;;14224:4;13915:328;;;13885:16;:368::i;:::-;14264:21;;;;;;;;-1:-1:-1;;;;;14264:21:158;-1:-1:-1;;;;;14264:38:158;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:121;;-1:-1:-1;;;14264:121:158;;14369:4;14264:121;;;1639:74:298;-1:-1:-1;;;;;14264:56:158;;;;;;;1612:18:298;;14264:121:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14420:9;-1:-1:-1;;;;;14401:37:158;;14431:6;14401:37;;;;643:25:298;;631:2;616:18;;497:177;5861:478:161;-1:-1:-1;;;;;5969:35:161;;5965:133;;6027:60;;-1:-1:-1;;;6027:60:161;;;;;;;;;;;5965:133;6122:2;;:40;;-1:-1:-1;;;6122:40:161;;-1:-1:-1;;;;;1657:55:298;;;6122:40:161;;;1639:74:298;6122:2:161;;;;:17;;1612:18:298;;6122:40:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6111:8;:51;6107:145;;;6185:56;;-1:-1:-1;;;6185:56:161;;;;;;;;;;;6107:145;6262:15;:38;;-1:-1:-1;;;;;;6262:38:161;-1:-1:-1;;;;;6262:38:161;;;;;;;;;;;6310:11;:22;5861:478::o;1702:188:54:-;1829:53;;-1:-1:-1;;;;;20814:15:298;;;1829:53:54;;;20796:34:298;20866:15;;;20846:18;;;20839:43;20898:18;;;20891:34;;;1802:81:54;;1822:5;;1844:18;;;;;20708::298;;1829:53:54;20533:398:298;1802:81:54;1702:188;;;;:::o;14642:1145:158:-;14728:6;2296:26:159;2315:6;2296:18;:26::i;:::-;14758:8:158::1;2166:30;2187:8;2166:20;:30::i;:::-;14782:19:::2;14798:1;14782:7;:19::i;:::-;14878:10;;14859:15;:29;14855:447;;14966:17;14975:8:::0;14966:6;:17:::2;:::i;:::-;14953:10;:30:::0;14855:447:::2;;;15091:21;15148:10;;15129:15;15116:10;;:28;;;;:::i;:::-;15115:43;;;;:::i;:::-;15091:67:::0;-1:-1:-1;15283:8:158;15254:25:::2;15091:67:::0;15254:6;:25:::2;:::i;:::-;15253:38;;;;:::i;:::-;15240:10;:51:::0;-1:-1:-1;14855:447:158::2;15351:10;;15365:1;15351:15:::0;15347:98:::2;;15389:45;;-1:-1:-1::0;;;15389:45:158::2;;;;;;;;;;;15347:98;15512:26;15530:8:::0;15512:15:::2;:26;:::i;:::-;15499:10;:39:::0;;;15698:15:::2;15685:10;:28:::0;15757:10:::2;::::0;15729:51:::2;::::0;;32035:25:298;;;32091:2;32076:18;;32069:34;;;32119:18;;;32112:34;;;;32177:2;32162:18;;32155:34;;;;15729:51:158::2;::::0;32022:3:298;32007:19;15729:51:158::2;;;;;;;2332:1:159::1;14642:1145:158::0;;;:::o;708:237:151:-;812:7;876:8;:21;;;899:8;:12;;;913:8;:14;;;865:63;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;842:96;;;;;;835:103;;708:237;;;:::o;6916:284:161:-;7013:6;6998:12;:21;;;6994:158;;;7081:60;;-1:-1:-1;;;7081:60:161;;;;;;;;;;;6994:158;7161:17;:32;;;;;;-1:-1:-1;;;7161:32:161;;;;;;;;;;;6916:284::o;10767:853:158:-;10823:4;10913:11;;10928:1;10913:16;10909:65;;-1:-1:-1;10952:11:158;;;10767:853::o;10909:65::-;11543:11;;11456;;11187:10;;11028;;10992:33;:31;:33::i;:::-;:46;;;;:::i;:::-;10991:206;;;;:::i;:::-;:323;;11310:4;10991:323;:::i;:::-;:476;;;;:::i;:::-;:563;;;;:::i;12809:517::-;-1:-1:-1;;;;;13302:17:158;;12913:4;13302:17;;;:11;:17;;;;;;;;;13132:8;:14;;;;;;12963:16;:22;;;;;;;13302:17;;13240:4;;12941:44;;:19;:44;:::i;:::-;12940:206;;;;:::i;:::-;:304;;;;:::i;:::-;:379;;;;:::i;:::-;12933:386;12809:517;-1:-1:-1;;;12809:517:158:o;2081:225:54:-;2200:39;;-1:-1:-1;;;2200:39:54;;2224:4;2200:39;;;32894:34:298;-1:-1:-1;;;;;32964:15:298;;;32944:18;;;32937:43;2177:20:54;;2200:15;;;;;;32806:18:298;;2200:39:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2177:62;-1:-1:-1;2249:50:54;2262:5;2269:7;2278:20;2293:5;2177:62;2278:20;:::i;:::-;2249:12;:50::i;2586:182:74:-;2647:12;2695:35;2726:3;2715:7;:14;;2695:19;:35::i;:::-;2732:28;2752:7;2732:19;:28::i;:::-;2678:83;;;;;;33148:19:298;;;;33183:12;;33176:28;33220:12;;2678:83:74;;;;;;;;;;;;;2671:90;;2586:182;;;:::o;3145:218::-;3207:12;3267:47;3287:26;;;;;;3267:19;:47::i;:::-;3323:31;3351:1;3343:10;;3323:31;;;:19;:31::i;:::-;3250:106;;;;;;;;33398:19:298;;;33459:66;33447:79;33442:2;33433:12;;33426:101;33552:2;33543:12;;33243:318;3569:546:74;3628:12;3656:1;3661;3656:6;3652:47;;-1:-1:-1;;3678:10:74;;;;;;;;;;;;-1:-1:-1;;;3678:10:74;;;;;3569:546::o;3652:47::-;3720:1;3708:9;3752:66;3759:6;;3752:66;;3781:5;;;;:::i;:::-;;-1:-1:-1;3800:7:74;;-1:-1:-1;3805:2:74;3800:7;;:::i;:::-;;;3752:66;;;3827:17;3857:3;3847:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:14:74;-1:-1:-1;3827:34:74;-1:-1:-1;3883:3:74;3896:192;3903:6;;3896:192;;3929:5;3933:1;3929;:5;:::i;:::-;3925:9;-1:-1:-1;3948:10:74;3978:6;3982:2;3978:1;:6;:::i;:::-;3977:13;;3988:2;3977:13;:::i;:::-;3973:17;;:1;:17;:::i;:::-;3962:29;;:2;:29;:::i;:::-;3948:44;;4006:9;4025:4;4018:12;;4006:24;;4054:2;4044:4;4049:1;4044:7;;;;;;;;:::i;:::-;;;;:12;;;;;;;;;;-1:-1:-1;4070:7:74;4075:2;4070:7;;:::i;:::-;;;3911:177;;3896:192;;;-1:-1:-1;4104:4:74;3569:546;-1:-1:-1;;;;3569:546:74:o;8501:496:158:-;8577:19;8585:10;8577:7;:19::i;:::-;-1:-1:-1;;;;;8663:23:158;;;;;;:11;:23;;;;;;:28;8659:150;;8768:30;8787:10;8768:18;:30::i;:::-;-1:-1:-1;;;;;8859:20:158;;;;;;:8;:20;;;;;:30;;8883:6;;8859:20;:30;;8883:6;;8859:30;:::i;:::-;;;;;;;;8942:6;8927:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;8964:26:158;;643:25:298;;;-1:-1:-1;;;;;8964:26:158;;;;;631:2:298;616:18;8964:26:158;;;;;;;;8501:496;;:::o;12241:209:159:-;12369:4;12396:21;;:40;;;-1:-1:-1;;;12396:40:159;;;;-1:-1:-1;;;;;12396:47:159;;;;:21;;:38;;:40;;;;;;;;;;;;;;:21;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12396:47:159;;;12241:209;-1:-1:-1;;12241:209:159:o;5864:590:122:-;6931:20:26;:18;:20::i;:::-;-1:-1:-1;;;;;6049:36:122;::::1;6045:110;;6108:36;;-1:-1:-1::0;;;6108:36:122::1;;;;;;;;;;;6045:110;6164:21;:37:::0;;-1:-1:-1;;;;;;6164:37:122::1;-1:-1:-1::0;;;;;6164:37:122;::::1;;::::0;;6255:29:::1;6275:8:::0;6255:19:::1;:29::i;:::-;6250:93;;6307:25;;-1:-1:-1::0;;;6307:25:122::1;;;;;;;;;;;6250:93;6352:28:::0;;:17:::1;:28:::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;6372:8;;6352:17;:28;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;6352:28:122::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;;6422:13;-1:-1:-1::0;;;;;6396:51:122::1;;6438:8;6396:51;;;;;;:::i;4348:150:158:-:0;6931:20:26;:18;:20::i;:::-;4460:31:158::1;4477:13;4460:16;:31::i;3926:334:161:-:0;6931:20:26;:18;:20::i;:::-;4115:28:161::1;4136:6;4115:20;:28::i;:::-;4153:38;4182:8;4153:28;:38::i;:::-;4201:52;4228:12;4242:10;4201:26;:52::i;6509:286::-:0;-1:-1:-1;;;;;6578:20:161;;6574:113;;6621:55;;-1:-1:-1;;;6621:55:161;;;;;;;;;;;6574:113;6696:2;:40;;-1:-1:-1;;;;;;6696:40:161;-1:-1:-1;;;;;6696:40:161;;;;;;;;6766:22;;;-1:-1:-1;;;6766:22:161;;;;:20;;:22;;;;;;;;;;;;;;;6696:40;6766:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6746:17;:42;-1:-1:-1;6509:286:161:o;11927:229:159:-;-1:-1:-1;;;;;12108:31:159;;;;;;:24;:31;;;;;;12050:99;;12108:31;12098:7;;12050:26;:99::i;10930:916::-;-1:-1:-1;;;;;11015:31:159;;11001:11;11015:31;;;:24;:31;;;;;;;11076:38;;-1:-1:-1;;;11076:38:159;;11108:4;11076:38;;;1639:74:298;11015:31:159;;;11076:23;;1612:18:298;;11076:38:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11056:58;;11187:6;11172:12;:21;11168:672;;;11325:21;;;;;;;;-1:-1:-1;;;;;11325:21:159;-1:-1:-1;;;;;11325:36:159;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11325:44:159;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11308:64:159;:5;-1:-1:-1;;;;;11308:64:159;;11287:543;;11571:21;;;;;;;;-1:-1:-1;;;;;11571:21:159;-1:-1:-1;;;;;11571:36:159;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11571:64:159;;11665:4;11673:21;11682:12;11673:6;:21;:::i;:::-;11571:142;;-1:-1:-1;;;;;;11571:142:159;;;;;;;-1:-1:-1;;;;;17250:55:298;;;11571:142:159;;;17232:74:298;17322:18;;;17315:34;17205:18;;11571:142:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:160:54;;;:::o;11287:543:159:-;11759:56;;-1:-1:-1;;;11759:56:159;;-1:-1:-1;;;;;1657:55:298;;11759:56:159;;;1639:74:298;1612:18;;11759:56:159;1477:242:298;11249:831:161;11405:2;;-1:-1:-1;;;;;11405:2:161;11381:12;:10;:12::i;:::-;-1:-1:-1;;;;;11381:27:161;;11377:114;;11431:49;;-1:-1:-1;;;11431:49:161;;;;;;;;;;;11377:114;11501:34;11538:26;;;:13;:26;;;;;;;;;11501:63;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11501:63:161;;;;;;;;-1:-1:-1;;;11501:63:161;;;;;;;;;;;11580:190;;4632:14:298;;4625:22;4607:41;;4664:18;;;4657:34;;;;11501:63:161;;11538:26;;11580:190;;4580:18:298;11580:190:161;;;;;;;11860:18;11856:155;;;11894:26;;;;:13;:26;;;;;:35;;:42;;;;-1:-1:-1;;;11894:42:161;;;1303:160:54;;;:::o;11856:155:161:-;-1:-1:-1;;11974:26:161;;;;:13;:26;;;;;11967:33;;;;;;;;;;;;;;-1:-1:-1;;11967:33:161;;;11249:831::o;16373:169:158:-;16446:8;16458:1;16446:13;16442:94;;16482:43;;-1:-1:-1;;;16482:43:158;;;;;;;;;;;1612:288;1764:4;-1:-1:-1;;;;;;1791:50:158;;-1:-1:-1;;;1791:50:158;;:102;;;1857:36;1881:11;1857:23;:36::i;12100:156::-;12166:4;12203:15;12189:10;;:29;;:60;;-1:-1:-1;12234:15:158;;6602:117:122:o;12189:60:158:-;-1:-1:-1;12221:10:158;;;12100:156::o;4059:629:54:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:54;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:54;;-1:-1:-1;;;;;1657:55:298;;4631:40:54;;;1639:74:298;1612:18;;4631:40:54;1477:242:298;12609:442:159;12806:18;;12792:10;;12734:14;;12750:22;;12792:10;;:32;12788:218;;12951:10;;12963:18;;12863:132;;-1:-1:-1;;;12863:132:159;;12951:10;;;;12863:132;;;36779:36:298;36831:18;;;36824:34;36752:18;;12863:132:159;36609:255:298;12788:218:159;-1:-1:-1;;13024:6:159;;;12609:442::o;3750:597::-;3862:5;2473:31;2498:5;2473:24;:31::i;:::-;3998:5:::1;:12;;;3950:24;:44;3975:5;:18;;;-1:-1:-1::0;;;;;3950:44:159::1;-1:-1:-1::0;;;;;3950:44:159::1;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4076:7:159::1;:19:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;4076:19:159;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4076:19:159;;::::1;-1:-1:-1::0;;;;;4076:19:159;;::::1;;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;::::1;::::0;::::1;:::i;:::-;;;;4171:5;:18;;;-1:-1:-1::0;;;;;4111:229:159::1;4142:5;:15;;;-1:-1:-1::0;;;;;4111:229:159::1;;4203:5;:12;;;4229:5;:19;;;4262:5;:19;;;4295:5;:11;;;4320:5;:10;;;4111:229;;;;;;;;;;:::i;:::-;;;;;;;;3750:597:::0;;:::o;3296:380:54:-;3411:47;;;-1:-1:-1;;;;;17250:55:298;;3411:47:54;;;17232:74:298;17322:18;;;;17315:34;;;3411:47:54;;;;;;;;;;17205:18:298;;;;3411:47:54;;;;;;;;-1:-1:-1;;;;;3411:47:54;-1:-1:-1;;;3411:47:54;;;3474:44;3426:13;3411:47;3474:23;:44::i;:::-;3469:201;;3561:43;;-1:-1:-1;;;;;17250:55:298;;;3561:43:54;;;17232:74:298;3601:1:54;17322:18:298;;;17315:34;3534:71:54;;3554:5;;3576:13;;;;;17205:18:298;;3561:43:54;17058:297:298;3534:71:54;3619:40;3639:5;3646:12;3619:19;:40::i;897:1306:74:-;965:7;1008:9;1028:7;1020:16;;1008:28;;1088:1;1092:66;1088:70;1084:74;;1182:1;1186:5;1182:9;1177:1;:15;1196:66;1176:86;1172:90;;1286:1;1290:5;1286:9;1281:1;:15;1300:66;1280:86;1276:90;;1390:1;1394:5;1390:9;1385:1;:15;1404:66;1384:86;1380:90;;1494:1;1498:4;1494:8;1489:1;:14;1507:66;1488:85;1484:89;;1597:1;1601:4;1597:8;1592:1;:14;1610:66;1591:85;1587:89;;1717:9;1804:1;1730;1734:66;1730:70;1729:76;;;;;:::i;:::-;;1906:1;1836:66;1832:70;;1831:76;2008:1;1938:66;1934:70;;1933:76;2037:5;2032:11;2047:4;2031:20;2027:24;;;2054:66;2027:93;;;-1:-1:-1;;;897:1306:74:o;7084:141:26:-;8870:21;8560:40;;;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:26;;;;;;;;;;;1105:595:151;1206:4;1269:8;:12;;;1263:26;1293:1;1263:31;1259:74;;-1:-1:-1;1317:5:151;;1105:595;-1:-1:-1;1105:595:151:o;1259:74::-;1388:8;:14;;;1382:28;1414:1;1382:33;1378:76;;-1:-1:-1;1438:5:151;;1105:595;-1:-1:-1;1105:595:151:o;1378:76::-;1522:21;;:26;:56;;;;-1:-1:-1;1552:21:151;;;;:26;1522:56;:102;;;;-1:-1:-1;1598:21:151;;;;:26;1522:102;1505:167;;;-1:-1:-1;1656:5:151;;1105:595;-1:-1:-1;1105:595:151:o;1505:167::-;-1:-1:-1;1689:4:151;;1105:595;-1:-1:-1;1105:595:151:o;15898:341:158:-;-1:-1:-1;;;;;15976:20:158;;;;:98;;-1:-1:-1;7332:16:122;7367:21;-1:-1:-1;;;;;7367:21:122;-1:-1:-1;;;;;16034:29:158;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16034:37:158;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16016:58:158;:6;-1:-1:-1;;;;;16016:58:158;;15976:98;15959:205;;;16106:47;;-1:-1:-1;;;16106:47:158;;;;;;;;;;;15959:205;16173:12;:21;;-1:-1:-1;;;;;;16173:21:158;-1:-1:-1;;;;;16173:21:158;;;;;;;;16209:23;;;;-1:-1:-1;;16209:23:158;15898:341;:::o;1610:281:159:-;1746:4;-1:-1:-1;;;;;;1773:59:159;;-1:-1:-1;;;1773:59:159;;:111;;;1848:36;1872:11;1848:23;:36::i;2705:151:59:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;10320:237:159:-;7332:16:122;7367:21;-1:-1:-1;;;;;7367:21:122;-1:-1:-1;;;;;10405:31:159;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10405:51:159;;10457:5;10405:58;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10399:152;;10487:53;;-1:-1:-1;;;10487:53:159;;;;;;;;;;;5189:578:54;5272:4;5574:12;5588:23;5623:5;-1:-1:-1;;;;;5615:19:54;5635:4;5615:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:67;;;;5657:7;:69;;;;-1:-1:-1;5669:17:54;;:22;;:56;;;5706:10;5695:30;;;;;;;;;;;;:::i;:::-;5657:103;;;;-1:-1:-1;;;;;;;;;;5730:26:54;;:30;;;5189:578::o;2105:273:122:-;2249:4;-1:-1:-1;;;;;;2276:43:122;;-1:-1:-1;;;2276:43:122;;:95;;-1:-1:-1;;;;;;;;;;1133:40:31;;;2335:36:122;1034:146:31;3180:392:59;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:59;;3394:4;3359:41;;;1639:74:298;1612:18;;3359:41:59;1477:242:298;3303:108:59;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:59;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:59:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:59;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:59;;-1:-1:-1;;;;;1657:55:298;;5121:24:59;;;1639:74:298;1612:18;;5121:24:59;1477:242:298;5041:119:59;-1:-1:-1;5180:10:59;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:59;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;14:286:298:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:298;;209:43;;199:71;;266:1;263;256:12;679:154;-1:-1:-1;;;;;758:5:298;754:54;747:5;744:65;734:93;;823:1;820;813:12;838:452;924:6;932;940;948;1001:3;989:9;980:7;976:23;972:33;969:53;;;1018:1;1015;1008:12;969:53;1054:9;1041:23;1031:33;;1111:2;1100:9;1096:18;1083:32;1073:42;;1165:2;1154:9;1150:18;1137:32;1178:31;1203:5;1178:31;:::i;:::-;838:452;;;;-1:-1:-1;1228:5:298;;1280:2;1265:18;1252:32;;-1:-1:-1;;838:452:298:o;1724:367::-;1787:8;1797:6;1851:3;1844:4;1836:6;1832:17;1828:27;1818:55;;1869:1;1866;1859:12;1818:55;-1:-1:-1;1892:20:298;;1935:18;1924:30;;1921:50;;;1967:1;1964;1957:12;1921:50;2004:4;1996:6;1992:17;1980:29;;2064:3;2057:4;2047:6;2044:1;2040:14;2032:6;2028:27;2024:38;2021:47;2018:67;;;2081:1;2078;2071:12;2018:67;1724:367;;;;;:::o;2096:505::-;2191:6;2199;2207;2260:2;2248:9;2239:7;2235:23;2231:32;2228:52;;;2276:1;2273;2266:12;2228:52;2312:9;2299:23;2289:33;;2373:2;2362:9;2358:18;2345:32;2400:18;2392:6;2389:30;2386:50;;;2432:1;2429;2422:12;2386:50;2471:70;2533:7;2524:6;2513:9;2509:22;2471:70;:::i;:::-;2096:505;;2560:8;;-1:-1:-1;2445:96:298;;-1:-1:-1;;;;2096:505:298:o;2606:180::-;2665:6;2718:2;2706:9;2697:7;2693:23;2689:32;2686:52;;;2734:1;2731;2724:12;2686:52;-1:-1:-1;2757:23:298;;2606:180;-1:-1:-1;2606:180:298:o;3431:247::-;3490:6;3543:2;3531:9;3522:7;3518:23;3514:32;3511:52;;;3559:1;3556;3549:12;3511:52;3598:9;3585:23;3617:31;3642:5;3617:31;:::i;3683:250::-;3768:1;3778:113;3792:6;3789:1;3786:13;3778:113;;;3868:11;;;3862:18;3849:11;;;3842:39;3814:2;3807:10;3778:113;;;-1:-1:-1;;3925:1:298;3907:16;;3900:27;3683:250::o;3938:271::-;3980:3;4018:5;4012:12;4045:6;4040:3;4033:19;4061:76;4130:6;4123:4;4118:3;4114:14;4107:4;4100:5;4096:16;4061:76;:::i;:::-;4191:2;4170:15;-1:-1:-1;;4166:29:298;4157:39;;;;4198:4;4153:50;;3938:271;-1:-1:-1;;3938:271:298:o;4214:220::-;4363:2;4352:9;4345:21;4326:4;4383:45;4424:2;4413:9;4409:18;4401:6;4383:45;:::i;5026:315::-;5094:6;5102;5155:2;5143:9;5134:7;5130:23;5126:32;5123:52;;;5171:1;5168;5161:12;5123:52;5210:9;5197:23;5229:31;5254:5;5229:31;:::i;:::-;5279:5;5331:2;5316:18;;;;5303:32;;-1:-1:-1;;;5026:315:298:o;5346:248::-;5414:6;5422;5475:2;5463:9;5454:7;5450:23;5446:32;5443:52;;;5491:1;5488;5481:12;5443:52;-1:-1:-1;;5514:23:298;;;5584:2;5569:18;;;5556:32;;-1:-1:-1;5346:248:298:o;5599:315::-;5667:6;5675;5728:2;5716:9;5707:7;5703:23;5699:32;5696:52;;;5744:1;5741;5734:12;5696:52;5780:9;5767:23;5757:33;;5840:2;5829:9;5825:18;5812:32;5853:31;5878:5;5853:31;:::i;:::-;5903:5;5893:15;;;5599:315;;;;;:::o;5919:439::-;5972:3;6010:5;6004:12;6037:6;6032:3;6025:19;6063:4;6092;6087:3;6083:14;6076:21;;6131:4;6124:5;6120:16;6154:1;6164:169;6178:6;6175:1;6172:13;6164:169;;;6239:13;;6227:26;;6273:12;;;;6308:15;;;;6200:1;6193:9;6164:169;;;-1:-1:-1;6349:3:298;;5919:439;-1:-1:-1;;;;;5919:439:298:o;6363:626::-;6418:3;-1:-1:-1;;;;;6527:2:298;6519:5;6513:12;6509:21;6504:3;6497:34;6592:2;6584:4;6577:5;6573:16;6567:23;6563:32;6556:4;6551:3;6547:14;6540:56;;6645:4;6638:5;6634:16;6628:23;6621:4;6616:3;6612:14;6605:47;6701:4;6694:5;6690:16;6684:23;6677:4;6672:3;6668:14;6661:47;6757:4;6750:5;6746:16;6740:23;6733:4;6728:3;6724:14;6717:47;6813:4;6806:5;6802:16;6796:23;6789:4;6784:3;6780:14;6773:47;6866:4;6859:5;6855:16;6849:23;6904:4;6897;6892:3;6888:14;6881:28;6925:58;6977:4;6972:3;6968:14;6954:12;6925:58;:::i;:::-;6918:65;6363:626;-1:-1:-1;;;;6363:626:298:o;6994:624::-;7059:3;7090;7122:5;7116:12;7149:6;7144:3;7137:19;7175:4;7204;7199:3;7195:14;7188:21;;7262:4;7252:6;7249:1;7245:14;7238:5;7234:26;7230:37;7301:4;7294:5;7290:16;7324:1;7334:258;7348:6;7345:1;7342:13;7334:258;;;7435:2;7431:7;7423:5;7417:4;7413:16;7409:30;7404:3;7397:43;7461:51;7507:4;7498:6;7492:13;7461:51;:::i;:::-;7570:12;;;;7453:59;-1:-1:-1;7535:15:298;;;;7370:1;7363:9;7334:258;;;-1:-1:-1;7608:4:298;;6994:624;-1:-1:-1;;;;;;;6994:624:298:o;7623:335::-;7864:2;7853:9;7846:21;7827:4;7884:68;7948:2;7937:9;7933:18;7925:6;7884:68;:::i;7963:743::-;8136:2;8125:9;8118:21;8181:6;8175:13;8170:2;8159:9;8155:18;8148:41;8243:2;8235:6;8231:15;8225:22;8220:2;8209:9;8205:18;8198:50;8316:2;8308:6;8304:15;8298:22;8291:30;8284:38;8279:2;8268:9;8264:18;8257:66;8099:4;8370:2;8362:6;8358:15;8352:22;8411:4;8405:3;8394:9;8390:19;8383:33;8439:63;8497:3;8486:9;8482:19;8468:12;8439:63;:::i;:::-;8425:77;;8551:3;8543:6;8539:16;8533:23;8626:2;8622:7;8610:9;8602:6;8598:22;8594:36;8587:4;8576:9;8572:20;8565:66;8648:52;8693:6;8677:14;8648:52;:::i;8942:129::-;9027:18;9020:5;9016:30;9009:5;9006:41;8996:69;;9061:1;9058;9051:12;9076:245;9134:6;9187:2;9175:9;9166:7;9162:23;9158:32;9155:52;;;9203:1;9200;9193:12;9155:52;9242:9;9229:23;9261:30;9285:5;9261:30;:::i;10102:383::-;10179:6;10187;10195;10248:2;10236:9;10227:7;10223:23;10219:32;10216:52;;;10264:1;10261;10254:12;10216:52;10300:9;10287:23;10277:33;;10357:2;10346:9;10342:18;10329:32;10319:42;;10411:2;10400:9;10396:18;10383:32;10424:31;10449:5;10424:31;:::i;:::-;10474:5;10464:15;;;10102:383;;;;;:::o;10971:127::-;11032:10;11027:3;11023:20;11020:1;11013:31;11063:4;11060:1;11053:15;11087:4;11084:1;11077:15;11103:253;11175:2;11169:9;11217:4;11205:17;;11252:18;11237:34;;11273:22;;;11234:62;11231:88;;;11299:18;;:::i;:::-;11335:2;11328:22;11103:253;:::o;11361:250::-;11428:2;11422:9;11470:6;11458:19;;11507:18;11492:34;;11528:22;;;11489:62;11486:88;;;11554:18;;:::i;11616:719::-;11659:5;11712:3;11705:4;11697:6;11693:17;11689:27;11679:55;;11730:1;11727;11720:12;11679:55;11766:6;11753:20;11792:18;11829:2;11825;11822:10;11819:36;;;11835:18;;:::i;:::-;11910:2;11904:9;11878:2;11964:13;;-1:-1:-1;;11960:22:298;;;11984:2;11956:31;11952:40;11940:53;;;12008:18;;;12028:22;;;12005:46;12002:72;;;12054:18;;:::i;:::-;12094:10;12090:2;12083:22;12129:2;12121:6;12114:18;12175:3;12168:4;12163:2;12155:6;12151:15;12147:26;12144:35;12141:55;;;12192:1;12189;12182:12;12141:55;12256:2;12249:4;12241:6;12237:17;12230:4;12222:6;12218:17;12205:54;12303:1;12296:4;12291:2;12283:6;12279:15;12275:26;12268:37;12323:6;12314:15;;;;;;11616:719;;;;:::o;12340:1334::-;12479:6;12487;12495;12548:2;12536:9;12527:7;12523:23;12519:32;12516:52;;;12564:1;12561;12554:12;12516:52;12603:9;12590:23;12622:31;12647:5;12622:31;:::i;:::-;12672:5;-1:-1:-1;12728:2:298;12713:18;;12700:32;12751:18;12781:14;;;12778:34;;;12808:1;12805;12798:12;12778:34;12831:22;;;;12887:4;12869:16;;;12865:27;12862:47;;;12905:1;12902;12895:12;12862:47;12933:22;;:::i;:::-;12993:2;12980:16;12971:7;12964:33;13052:2;13048;13044:11;13031:25;13026:2;13017:7;13013:16;13006:51;13112:2;13108;13104:11;13091:25;13086:2;13077:7;13073:16;13066:51;13163:2;13159;13155:11;13142:25;13192:2;13182:8;13179:16;13176:36;;;13208:1;13205;13198:12;13176:36;13246:45;13283:7;13272:8;13268:2;13264:17;13246:45;:::i;:::-;13241:2;13232:7;13228:16;13221:71;;13338:3;13334:2;13330:12;13317:26;13368:2;13358:8;13355:16;13352:36;;;13384:1;13381;13374:12;13352:36;13423:45;13460:7;13449:8;13445:2;13441:17;13423:45;:::i;:::-;13417:3;13404:17;;13397:72;-1:-1:-1;13408:7:298;-1:-1:-1;13548:2:298;13533:18;;13520:32;;-1:-1:-1;13564:16:298;;;13561:36;;;13593:1;13590;13583:12;13561:36;;13616:52;13660:7;13649:8;13638:9;13634:24;13616:52;:::i;:::-;13606:62;;;12340:1334;;;;;:::o;14141:118::-;14227:5;14220:13;14213:21;14206:5;14203:32;14193:60;;14249:1;14246;14239:12;14264:902;14392:6;14400;14408;14416;14424;14477:2;14465:9;14456:7;14452:23;14448:32;14445:52;;;14493:1;14490;14483:12;14445:52;14532:9;14519:23;14551:28;14573:5;14551:28;:::i;:::-;14598:5;-1:-1:-1;14654:2:298;14639:18;;14626:32;14677:18;14707:14;;;14704:34;;;14734:1;14731;14724:12;14704:34;14773:70;14835:7;14826:6;14815:9;14811:22;14773:70;:::i;:::-;14862:8;;-1:-1:-1;14747:96:298;-1:-1:-1;14950:2:298;14935:18;;14922:32;;-1:-1:-1;14966:16:298;;;14963:36;;;14995:1;14992;14985:12;14963:36;;15034:72;15098:7;15087:8;15076:9;15072:24;15034:72;:::i;:::-;14264:902;;;;-1:-1:-1;14264:902:298;;-1:-1:-1;15125:8:298;;15008:98;14264:902;-1:-1:-1;;;14264:902:298:o;15171:1099::-;15568:2;15557:9;15550:21;15531:4;15594:68;15658:2;15647:9;15643:18;15635:6;15594:68;:::i;:::-;15719:22;;;15681:2;15699:18;;;15692:50;;;;15791:13;;15813:22;;;15889:15;;;;15851;;;15922:1;15932:218;15946:6;15943:1;15940:13;15932:218;;;16011:13;;-1:-1:-1;;;;;16007:62:298;15995:75;;16125:15;;;;16090:12;;;;15968:1;15961:9;15932:218;;;15936:3;;16195:9;16190:3;16186:19;16181:2;16170:9;16166:18;16159:47;16223:41;16260:3;16252:6;16223:41;:::i;:::-;16215:49;15171:1099;-1:-1:-1;;;;;;;;15171:1099:298:o;16464:309::-;16529:6;16537;16590:2;16578:9;16569:7;16565:23;16561:32;16558:52;;;16606:1;16603;16596:12;16558:52;16642:9;16629:23;16619:33;;16702:2;16691:9;16687:18;16674:32;16715:28;16737:5;16715:28;:::i;16778:275::-;16872:6;16925:2;16913:9;16904:7;16900:23;16896:32;16893:52;;;16941:1;16938;16931:12;16893:52;16973:9;16967:16;16992:31;17017:5;16992:31;:::i;17360:184::-;17430:6;17483:2;17471:9;17462:7;17458:23;17454:32;17451:52;;;17499:1;17496;17489:12;17451:52;-1:-1:-1;17522:16:298;;17360:184;-1:-1:-1;17360:184:298:o;17802:799::-;18042:25;;;18030:2;18086;18104:18;;;18097:30;;;18015:18;;;18162:22;;;17982:4;;18241:6;;18215:2;18200:18;;17982:4;18275:300;18289:6;18286:1;18283:13;18275:300;;;18364:6;18351:20;18384:31;18409:5;18384:31;:::i;:::-;-1:-1:-1;;;;;18440:54:298;18428:67;;18550:15;;;;18515:12;;;;18311:1;18304:9;18275:300;;;-1:-1:-1;18592:3:298;17802:799;-1:-1:-1;;;;;;;17802:799:298:o;18606:127::-;18667:10;18662:3;18658:20;18655:1;18648:31;18698:4;18695:1;18688:15;18722:4;18719:1;18712:15;18738:128;18805:9;;;18826:11;;;18823:37;;;18840:18;;:::i;18871:380::-;18950:1;18946:12;;;;18993;;;19014:61;;19068:4;19060:6;19056:17;19046:27;;19014:61;19121:2;19113:6;19110:14;19090:18;19087:38;19084:161;;19167:10;19162:3;19158:20;19155:1;19148:31;19202:4;19199:1;19192:15;19230:4;19227:1;19220:15;19084:161;;18871:380;;;:::o;19256:132::-;19332:13;;19354:28;19332:13;19354:28;:::i;:::-;19256:132;;;:::o;19393:245::-;19460:6;19513:2;19501:9;19492:7;19488:23;19484:32;19481:52;;;19529:1;19526;19519:12;19481:52;19561:9;19555:16;19580:28;19602:5;19580:28;:::i;19945:138::-;20024:13;;20046:31;20024:13;20046:31;:::i;20936:197::-;20977:3;21015:5;21009:12;21030:65;21088:6;21083:3;21076:4;21069:5;21065:16;21030:65;:::i;:::-;21111:16;;;;;20936:197;-1:-1:-1;;20936:197:298:o;21138:287::-;21267:3;21305:6;21299:13;21321:66;21380:6;21375:3;21368:4;21360:6;21356:17;21321:66;:::i;:::-;21403:16;;;;;21138:287;-1:-1:-1;;21138:287:298:o;21559:1948::-;22508:19;22503:3;22496:32;22478:3;22557:6;22551:13;22583:4;22596:73;22662:6;22657:2;22652:3;22648:12;22643:2;22635:6;22631:15;22596:73;:::i;:::-;22733:17;22728:2;22688:16;;;22720:11;;;22713:38;22776:13;;22798:74;22776:13;22850:11;;;22833:15;;;22798:74;:::i;:::-;22937:19;22891:17;;22924:11;;;22917:40;;;;22982:13;;23004:74;22982:13;23064:2;23056:11;;23039:15;;;23004:74;:::i;:::-;23143:17;23138:2;23097:17;;;;23130:11;;;23123:38;23186:13;;23208:74;23186:13;23268:2;23260:11;;23243:15;;;23208:74;:::i;:::-;23347:34;23342:2;23301:17;;;;23334:11;;;23327:55;-1:-1:-1;;;;23406:2:298;23398:11;;23391:26;23433:68;23463:37;23496:2;23488:11;;23480:6;23463:37;:::i;:::-;21507:12;21495:25;;21545:2;21536:12;;21430:124;23512:949;23860:4;23889:3;23919:2;23908:9;23901:21;23939:45;23980:2;23969:9;23965:18;23957:6;23939:45;:::i;:::-;-1:-1:-1;;;;;24081:15:298;;;24076:2;24061:18;;24054:43;24133:15;;;24128:2;24113:18;;24106:43;-1:-1:-1;;24185:15:298;;;24180:2;24165:18;;24158:43;24250:18;24238:31;;;;24232:3;24217:19;;24210:60;24307:15;;;;24301:3;24286:19;;24279:44;24354:3;24339:19;;24332:35;;;;24398:3;24383:19;;24376:35;;;;24442:3;24427:19;24420:35;;;;23931:53;23512:949;-1:-1:-1;23512:949:298:o;24466:136::-;24544:13;;24566:30;24544:13;24566:30;:::i;24607:738::-;24736:6;24744;24752;24760;24768;24821:3;24809:9;24800:7;24796:23;24792:33;24789:53;;;24838:1;24835;24828:12;24789:53;24870:9;24864:16;24889:31;24914:5;24889:31;:::i;:::-;24989:2;24974:18;;24968:25;24939:5;;-1:-1:-1;25002:33:298;24968:25;25002:33;:::i;:::-;25101:2;25086:18;;25080:25;25150:2;25135:18;;25129:25;25054:7;;-1:-1:-1;25080:25:298;-1:-1:-1;25163:33:298;25129:25;25163:33;:::i;:::-;25267:3;25252:19;;25246:26;25215:7;;-1:-1:-1;25281:32:298;25246:26;25281:32;:::i;:::-;25332:7;25322:17;;;24607:738;;;;;;;;:::o;25564:127::-;25625:10;25620:3;25616:20;25613:1;25606:31;25656:4;25653:1;25646:15;25680:4;25677:1;25670:15;25696:125;25761:9;;;25782:10;;;25779:36;;;25795:18;;:::i;25826:135::-;25865:3;25886:17;;;25883:43;;25906:18;;:::i;:::-;-1:-1:-1;25953:1:298;25942:13;;25826:135::o;25966:358::-;26066:6;26061:3;26054:19;26036:3;26096:66;26088:6;26085:78;26082:98;;;26176:1;26173;26166:12;26082:98;26212:6;26209:1;26205:14;26264:8;26257:5;26250:4;26245:3;26241:14;26228:45;26293:18;;;;26313:4;26289:29;;25966:358;-1:-1:-1;;;25966:358:298:o;26329:745::-;26684:6;26673:9;26666:25;26727:6;26722:2;26711:9;26707:18;26700:34;26784:6;26777:14;26770:22;26765:2;26754:9;26750:18;26743:50;26829:3;26824:2;26813:9;26809:18;26802:31;26647:4;26856:74;26925:3;26914:9;26910:19;26902:6;26894;26856:74;:::i;:::-;26979:9;26971:6;26967:22;26961:3;26950:9;26946:19;26939:51;27007:61;27061:6;27053;27045;27007:61;:::i;:::-;26999:69;26329:745;-1:-1:-1;;;;;;;;;;26329:745:298:o;27079:829::-;27162:5;27210:4;27198:9;27193:3;27189:19;27185:30;27182:50;;;27228:1;27225;27218:12;27182:50;27250:22;;:::i;:::-;27241:31;;27302:9;27296:16;27321:30;27343:7;27321:30;:::i;:::-;27360:22;;27427:2;27412:18;;27406:25;27440:30;27406:25;27440:30;:::i;:::-;27497:2;27486:14;;27479:31;27555:2;27540:18;;27534:25;27568:30;27534:25;27568:30;:::i;:::-;27625:2;27614:14;;27607:31;27683:2;27668:18;;27662:25;27696:33;27662:25;27696:33;:::i;:::-;27756:2;27745:14;;27738:31;27814:3;27799:19;;27793:26;27828:33;27793:26;27828:33;:::i;:::-;27888:3;27877:15;;27870:32;27881:5;27079:829;-1:-1:-1;;27079:829:298:o;27913:1270::-;28011:6;28064:3;28052:9;28043:7;28039:23;28035:33;28032:53;;;28081:1;28078;28071:12;28032:53;28107:17;;:::i;:::-;28147:74;28213:7;28202:9;28147:74;:::i;:::-;28140:5;28133:89;28256:50;28301:3;28290:9;28286:19;28256:50;:::i;:::-;28249:4;28242:5;28238:16;28231:76;28341:49;28385:3;28374:9;28370:19;28341:49;:::i;:::-;28334:4;28327:5;28323:16;28316:75;28425:47;28467:3;28456:9;28452:19;28425:47;:::i;:::-;28418:4;28411:5;28407:16;28400:73;28492:3;28529:49;28574:2;28563:9;28559:18;28529:49;:::i;:::-;28522:4;28515:5;28511:16;28504:75;28598:3;28634:48;28678:2;28667:9;28663:18;28634:48;:::i;:::-;28628:3;28621:5;28617:15;28610:73;28702:3;28738:46;28780:2;28769:9;28765:18;28738:46;:::i;:::-;28732:3;28725:5;28721:15;28714:71;28804:3;28861:2;28850:9;28846:18;28840:25;28834:3;28827:5;28823:15;28816:50;28919:6;28908:9;28904:22;28898:29;28893:2;28886:5;28882:14;28875:53;28981:3;28970:9;28966:19;28960:26;28955:2;28948:5;28944:14;28937:50;29019;29064:3;29053:9;29049:19;29019:50;:::i;:::-;29014:2;29007:5;29003:14;28996:74;29102:50;29147:3;29136:9;29132:19;29102:50;:::i;:::-;29086:14;;;29079:74;-1:-1:-1;29090:5:298;;27913:1270;-1:-1:-1;;;;;27913:1270:298:o;29188:168::-;29261:9;;;29292;;29309:15;;;29303:22;;29289:37;29279:71;;29330:18;;:::i;29361:127::-;29422:10;29417:3;29413:20;29410:1;29403:31;29453:4;29450:1;29443:15;29477:4;29474:1;29467:15;29493:217;29533:1;29559;29549:132;;29603:10;29598:3;29594:20;29591:1;29584:31;29638:4;29635:1;29628:15;29666:4;29663:1;29656:15;29549:132;-1:-1:-1;29695:9:298;;29493:217::o;29715:331::-;29820:9;29831;29873:8;29861:10;29858:24;29855:44;;;29895:1;29892;29885:12;29855:44;29924:6;29914:8;29911:20;29908:40;;;29944:1;29941;29934:12;29908:40;-1:-1:-1;;29970:23:298;;;30015:25;;;;;-1:-1:-1;29715:331:298:o;30051:337::-;-1:-1:-1;;30172:19:298;;30259:11;;;;30290:2;30282:11;;30279:103;;;30352:2;30348:12;;;;30345:1;30341:20;30337:29;;;30329:38;30325:47;;;;30051:337;-1:-1:-1;;30051:337:298:o;32200:454::-;32425:6;32414:9;32407:25;32468:2;32463;32452:9;32448:18;32441:30;32388:4;32494:45;32535:2;32524:9;32520:18;32512:6;32494:45;:::i;:::-;32587:9;32579:6;32575:22;32570:2;32559:9;32555:18;32548:50;32615:33;32641:6;32633;32615:33;:::i;33566:148::-;33654:4;33633:12;;;33647;;;33629:31;;33672:13;;33669:39;;;33688:18;;:::i;33845:518::-;33947:2;33942:3;33939:11;33936:421;;;33983:5;33980:1;33973:16;34027:4;34024:1;34014:18;34097:2;34085:10;34081:19;34078:1;34074:27;34068:4;34064:38;34133:4;34121:10;34118:20;34115:47;;;-1:-1:-1;34156:4:298;34115:47;34211:2;34206:3;34202:12;34199:1;34195:20;34189:4;34185:31;34175:41;;34266:81;34284:2;34277:5;34274:13;34266:81;;;34343:1;34329:16;;34310:1;34299:13;34266:81;;;34270:3;;33845:518;;;:::o;34539:1345::-;34665:3;34659:10;34692:18;34684:6;34681:30;34678:56;;;34714:18;;:::i;:::-;34743:97;34833:6;34793:38;34825:4;34819:11;34793:38;:::i;:::-;34787:4;34743:97;:::i;:::-;34895:4;;34952:2;34941:14;;34969:1;34964:663;;;;35671:1;35688:6;35685:89;;;-1:-1:-1;35740:19:298;;;35734:26;35685:89;-1:-1:-1;;34496:1:298;34492:11;;;34488:24;34484:29;34474:40;34520:1;34516:11;;;34471:57;35787:81;;34934:944;;34964:663;33792:1;33785:14;;;33829:4;33816:18;;-1:-1:-1;;35000:20:298;;;35118:236;35132:7;35129:1;35126:14;35118:236;;;35221:19;;;35215:26;35200:42;;35313:27;;;;35281:1;35269:14;;;;35148:19;;35118:236;;;35122:3;35382:6;35373:7;35370:19;35367:201;;;35443:19;;;35437:26;-1:-1:-1;;35526:1:298;35522:14;;;35538:3;35518:24;35514:37;35510:42;35495:58;35480:74;;35367:201;;;35614:1;35605:6;35602:1;35598:14;35594:22;35588:4;35581:36;34934:944;;;;;34539:1345;;:::o;35889:715::-;36072:2;36061:9;36054:21;36117:6;36111:13;36106:2;36095:9;36091:18;36084:41;36179:2;36171:6;36167:15;36161:22;36156:2;36145:9;36141:18;36134:50;36238:2;36230:6;36226:15;36220:22;36215:2;36204:9;36200:18;36193:50;36035:4;36290:2;36282:6;36278:15;36272:22;36331:4;36325:3;36314:9;36310:19;36303:33;36359:52;36406:3;36395:9;36391:19;36377:12;36359:52;:::i;:::-;36345:66;;36460:3;36452:6;36448:16;36442:23;36535:2;36531:7;36519:9;36511:6;36507:22;36503:36;36496:4;36485:9;36481:20;36474:66;36557:41;36591:6;36575:14;36557:41;:::i;36869:548::-;37160:6;37149:9;37142:25;37203:6;37198:2;37187:9;37183:18;37176:34;37246:6;37241:2;37230:9;37226:18;37219:34;37289:6;37284:2;37273:9;37269:18;37262:34;37333:3;37327;37316:9;37312:19;37305:32;37123:4;37354:57;37406:3;37395:9;37391:19;37383:6;37354:57;:::i;:::-;37346:65;36869:548;-1:-1:-1;;;;;;;36869:548:298:o;37732:275::-;37923:2;37912:9;37905:21;37886:4;37943:58;37997:2;37986:9;37982:18;37974:6;37943:58;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ASSERTER_ROLE()": "bf14d4a9",
    "amountPaid(address,uint256)": "b33ec618",
    "assertDataFor(bytes32,bytes32,address)": "93ee663b",
    "assertionData(bytes32)": "2a4e1904",
    "assertionDisputedCallback(bytes32)": "d448a4ec",
    "assertionLiveness()": "b75d4e24",
    "assertionResolvedCallback(bytes32,bool)": "f1b156b2",
    "claimRewards()": "372500ab",
    "collectPaymentOrders()": "c0231ff6",
    "createKPI(bool,uint256[],uint256[])": "bc7d2a33",
    "defaultBond()": "8333cb06",
    "defaultCurrency()": "20402e1d",
    "defaultIdentifier()": "d509b017",
    "deleteStuckAssertion(bytes32)": "e31ae421",
    "depositFeeFunds(uint256)": "64e6bbe5",
    "getAssertion(bytes32)": "88302884",
    "getAssertionConfig(bytes32)": "956ae17b",
    "getAssertionPending()": "8608fc9e",
    "getBalance(address)": "f8b2cb4f",
    "getData(bytes32)": "54f6127f",
    "getEarned(address)": "8620612b",
    "getEstimatedReward(uint256,uint256)": "ff96461b",
    "getFlagCount()": "c9582f20",
    "getFlags()": "6cc7149d",
    "getKPI(uint256)": "772fd8da",
    "getKPICounter()": "6554139e",
    "getLastUpdate()": "4c89867f",
    "getRewardRate()": "7e1a3786",
    "getRewardValue()": "0f2bdef6",
    "getRewardsEnd()": "03269bda",
    "getStakingToken()": "9f9106d1",
    "getTotalSupply()": "c4e41b22",
    "grantModuleRole(bytes32,address)": "6c67e807",
    "grantModuleRoleBatched(bytes32,address[])": "272bbd44",
    "identifier()": "7998a1c4",
    "init(address,(uint256,uint256,uint256,string,string),bytes)": "b66a870c",
    "isTrustedForwarder(address)": "572b6c05",
    "oo()": "8921a614",
    "orchestrator()": "b74795d9",
    "outstandingTokenAmount(address)": "2e84db5f",
    "paymentOrders()": "75fa0b76",
    "postAssertion(bytes32,uint256,address,uint256)": "074644e6",
    "revokeModuleRole(bytes32,address)": "bcb61920",
    "revokeModuleRoleBatched(bytes32,address[])": "24e30270",
    "setDefaultAssertionLiveness(uint64)": "81d09517",
    "setDefaultCurrencyAndBond(address,uint256)": "59be48f2",
    "setOptimisticOracle(address)": "bf5c3252",
    "setRewards(uint256,uint256)": "654e51e7",
    "stake(uint256)": "a694fc3a",
    "supportsInterface(bytes4)": "01ffc9a7",
    "title()": "4a79d50c",
    "trustedForwarder()": "7da0a877",
    "unstake(uint256)": "2e17de78",
    "url()": "5600f04f",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"funcSig\",\"type\":\"string\"}],\"name\":\"Module_OrchestratorCallbackFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Module__CallerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__CallerNotAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"Module__ERC20PaymentClientBase__InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidPaymentOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__InvalidToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"flagCount\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"arrayLength\",\"type\":\"uint256\"}],\"name\":\"Module__ERC20PaymentClientBase__MismatchBetweenFlagCountAndArrayLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase__TokenTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__ERC20PaymentClientBase_v2__FlagAmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__InvalidOrchestratorAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"Module__LM_PC_KPIRewarder_v2__AssertionNotStuck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v2__CannotStakeWhenAssertionPending\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v2__InvalidKPINumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v2__InvalidKPITrancheValues\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v2__InvalidKPIValueLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v2__InvalidTrancheNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v2__ModuleCannotUseStakingTokenAsBond\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"Module__LM_PC_KPIRewarder_v2__NonExistentAssertionId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_KPIRewarder_v2__UnresolvedAssertionExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v2__InvalidDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v2__InvalidRewardRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__LM_PC_Staking_v2__InvalidStakingToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OnlyCallableByOrchestrator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OnlyCallableByPaymentClient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator_InsufficientFundsToPayForBond\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__CallerNotOO\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__CurrencyBondTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidDefaultCurrency\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidDefaultLiveness\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Module__OptimisticOracleIntegrator__InvalidOOInstance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAsserted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DataAssertionResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"DeletedStuckAssertion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeFundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"flagCount\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newFlags\",\"type\":\"bytes32\"}],\"name\":\"FlagsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"KPI_Id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numOfTranches\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalKPIRewards\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"continuous\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"trancheValues\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"trancheRewards\",\"type\":\"uint256[]\"}],\"name\":\"KPICreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parentOrchestrator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"patchVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IModule_v1.Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"ModuleInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"flags\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"PaymentOrderAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"KpiToUse\",\"type\":\"uint256\"}],\"name\":\"RewardRoundConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRewardsEnd\",\"type\":\"uint256\"}],\"name\":\"RewardSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"StakingTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"triggerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"earnedRewards\",\"type\":\"uint256\"}],\"name\":\"Updated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ASSERTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"amountPaid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data_\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"}],\"name\":\"assertDataFor\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"assertionData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"assertionDisputedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assertionLiveness\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"assertedTruthfully\",\"type\":\"bool\"}],\"name\":\"assertionResolvedCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectPaymentOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"flags\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IERC20PaymentClientBase_v2.PaymentOrder[]\",\"name\":\"paymentOrders_\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens_\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"totalAmounts_\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_continuous\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"_trancheValues\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_trancheRewards\",\"type\":\"uint256[]\"}],\"name\":\"createKPI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultBond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"deleteStuckAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFeeFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertion\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"resolved\",\"type\":\"bool\"}],\"internalType\":\"struct IOptimisticOracleIntegrator.DataAssertion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"KpiToUse\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"distributed\",\"type\":\"bool\"}],\"internalType\":\"struct ILM_PC_KPIRewarder_v2.RewardRoundConfiguration\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssertionPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"getEstimatedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlagCount\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"flagCount_\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlags\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"flags_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"KPInum\",\"type\":\"uint256\"}],\"name\":\"getKPI\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numOfTranches\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"continuous\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"trancheValues\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"trancheRewards\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ILM_PC_KPIRewarder_v2.KPI\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getKPICounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"grantModuleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"grantModuleRoleBatched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"identifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IOrchestrator_v1\",\"name\":\"orchestrator_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"majorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minorVersion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"patchVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct IModule_v1.Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"configData\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oo\",\"outputs\":[{\"internalType\":\"contract OptimisticOracleV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orchestrator\",\"outputs\":[{\"internalType\":\"contract IOrchestrator_v1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"}],\"name\":\"outstandingTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"flags\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct IERC20PaymentClientBase_v2.PaymentOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assertedValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"asserter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetKPI\",\"type\":\"uint256\"}],\"name\":\"postAssertion\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"revokeModuleRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"}],\"name\":\"revokeModuleRoleBatched\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_newLiveness\",\"type\":\"uint64\"}],\"name\":\"setDefaultAssertionLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newBond\",\"type\":\"uint256\"}],\"name\":\"setDefaultCurrencyAndBond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOO\",\"type\":\"address\"}],\"name\":\"setOptimisticOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"url\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Inverter Network\",\"custom:security-contact\":\"security@inverter.network                          In case of any concerns or findings, please refer to our Security Policy                          at security.inverter.network or email us directly!\",\"details\":\"Extends {LM_PC_Staking_v2} and integrates with {OptimisticOracleIntegrator}          to enable KPI-based reward distribution within the staking manager.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"Module_OrchestratorCallbackFailed(string)\":[{\"params\":{\"funcSig\":\"The signature of the function called.\"}}],\"Module__CallerNotAuthorized(bytes32,address)\":[{\"params\":{\"caller\":\"The address that is required to have the role.\",\"role\":\"The role that is required.\"}}],\"Module__ERC20PaymentClientBase__InsufficientFunds(address)\":[{\"params\":{\"token\":\"The token in which the payment was made.\"}}],\"Module__InvalidAddress()\":[{\"details\":\"Invalid Address.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"DataAsserted(bytes32,bytes32,address,bytes32)\":{\"params\":{\"asserter\":\"The address of the asserter.\",\"assertionId\":\"The assertionId that was asserted.\",\"data\":\"The data that was asserted.\",\"dataId\":\"The dataId that was asserted.\"}},\"DataAssertionResolved(bool,bytes32,bytes32,address,bytes32)\":{\"params\":{\"assertedTruthfully\":\"Whether the assertion was resolved as true or false.\",\"asserter\":\"The address of the asserter.\",\"assertionId\":\"The assertionId that was asserted.\",\"data\":\"The data that was asserted.\",\"dataId\":\"The dataId that was asserted.\"}},\"FeeFundsDeposited(address,uint256)\":{\"params\":{\"amount\":\"The amount deposited.\",\"token\":\"The token used for the deposit.\"}},\"FlagsSet(uint8,bytes32)\":{\"params\":{\"flagCount\":\"The number of flags set.\",\"newFlags\":\"The newly set flags.\"}},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"KPICreated(uint256,uint256,uint256,bool,uint256[],uint256[])\":{\"params\":{\"KPI_Id\":\"The id of the KPI.\",\"continuous\":\"Whether the KPI is continuous or not.\",\"numOfTranches\":\"The number of tranches in the KPI.\",\"totalKPIRewards\":\"The total rewards for the KPI.\",\"trancheRewards\":\"The rewards to be distributed at completion of each tranche.\",\"trancheValues\":\"The values at which each tranche ends.\"}},\"ModuleInitialized(address,(uint256,uint256,uint256,string,string))\":{\"params\":{\"metadata\":\"The metadata of the module.\",\"parentOrchestrator\":\"The address of the {Orchestrator_v1} the module is linked to.\"}},\"PaymentOrderAdded(address,address,uint256,uint256,uint256,bytes32,bytes32[])\":{\"params\":{\"amount\":\"The amount of tokens the payment consists of.\",\"data\":\"Array of additional data regarding the payment order.\",\"flags\":\"Flags that indicate additional data used by the payment         order.\",\"originChainId\":\"The id of the origin chain.\",\"recipient\":\"The address that will receive the payment.\",\"targetChainId\":\"The id of the target chain.\",\"token\":\"The token in which to pay.\"}},\"ProtocolFeeTransferred(address,address,uint256)\":{\"params\":{\"feeAmount\":\"The fee amount transferred to the treasury.\",\"token\":\"The token received as protocol fee.\",\"treasury\":\"The protocol treasury address receiving the token fee amount.\"}},\"RewardRoundConfigured(bytes32,uint256,uint256,uint256)\":{\"params\":{\"KpiToUse\":\"The KPI to be used for distribution once the assertion confirms.\",\"assertedValue\":\"The value that was asserted.\",\"assertionId\":\"The id of the assertion.\",\"creationTime\":\"The timestamp the assertion was created.\"}},\"RewardSet(uint256,uint256,uint256,uint256)\":{\"params\":{\"duration\":\"The duration of the reward period.\",\"newRewardRate\":\"The new reward rate.\",\"newRewardsEnd\":\"The new timestamp of when the rewards will end.\",\"rewardAmount\":\"The amount of tokens to distribute.\"}},\"RewardsDistributed(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens earned.\",\"user\":\"The address of the user.\"}},\"Staked(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens staked.\",\"user\":\"The address of the user.\"}},\"StakingTokenSet(address)\":{\"params\":{\"token\":\"Address of token that can be staked.\"}},\"Unstaked(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens unstaked.\",\"user\":\"The address of the user.\"}},\"Updated(address,uint256,uint256,uint256)\":{\"params\":{\"earnedRewards\":\"How much a user earned up to point of state change.\",\"lastUpdate\":\"Timestamp of last state change.\",\"rewardValue\":\"Variable necessary to calculate how much rewards a staker is eligible for.\",\"triggerAddress\":\"Address of user if state change was triggered by a staking action. Else can be zero.\"}}},\"kind\":\"dev\",\"methods\":{\"amountPaid(address,uint256)\":{\"details\":\"Payment Client will reduce the total amount of tokens it will stock up by the given amount.This has to be called by a paymentProcessor.\",\"params\":{\"amount_\":\"amount of tokens that have been paid out.\",\"token_\":\"The token in which the payment was made.\"}},\"assertDataFor(bytes32,bytes32,address)\":{\"details\":\"Data can be asserted many times with the same combination of arguments, resulting in unique assertionIds.         This is because the block.timestamp is included in the claim. The consumer contract must         store the returned assertionId identifiers to able to get the information using getData.\",\"params\":{\"asserter\":\"The address doing the asserter. If zero defaults to _msgSender().\",\"data\":\"The data to assert.\",\"dataId\":\"The id of the data to assert.\"},\"returns\":{\"assertionId\":\"The id of the generated Assertion.\"}},\"assertionDisputedCallback(bytes32)\":{\"details\":\"This OptimisticOracleV3 callback function needs to be defined so the OOv3 doesn't revert when it tries\",\"params\":{\"assertionId\":\"The identifier of the assertion that was disputed.\"}},\"assertionResolvedCallback(bytes32,bool)\":{\"params\":{\"assertedTruthfully\":\"Whether the assertion was resolved as truthful or not.\",\"assertionId\":\"The identifier of the assertion that was resolved.\"}},\"claimRewards()\":{\"details\":\"Reaps the rewards collected up to this point for the msg.Sender().\"},\"collectPaymentOrders()\":{\"details\":\"Marks the orders as completed for the client.\",\"returns\":{\"paymentOrders_\":\"list of payment orders.\",\"tokens_\":\"list of token addresses.\",\"totalAmounts_\":\"list of amounts.\"}},\"createKPI(bool,uint256[],uint256[])\":{\"params\":{\"_continuous\":\"Should the tranche rewards be distributed continuously or in steps.\",\"_trancheRewards\":\"The rewards to be distributed at completion of each tranche.\",\"_trancheValues\":\"The value at which the tranches end.\"},\"returns\":{\"_0\":\"The KPI id.\"}},\"deleteStuckAssertion(bytes32)\":{\"details\":\"This function is only callable by the Orchestrator Admin.\",\"params\":{\"assertionId\":\"The id of the assertion to delete.\"}},\"depositFeeFunds(uint256)\":{\"details\":\"Top up funds to pay the optimistic oracle fee\",\"params\":{\"amount\":\"The amount to deposit.\"}},\"getAssertion(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return.\"},\"returns\":{\"_0\":\"DataAssertion The Assertion.\"}},\"getAssertionConfig(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return.\"},\"returns\":{\"_0\":\"The Assertion Configuration.\"}},\"getAssertionPending()\":{\"returns\":{\"_0\":\"The assertion pending flag.\"}},\"getBalance(address)\":{\"params\":{\"user\":\"The address of a user that staked.\"}},\"getData(bytes32)\":{\"params\":{\"assertionId\":\"The id of the Assertion to return.\"},\"returns\":{\"_0\":\"bool Wether the assertion is resolved.\",\"_1\":\"bytes32 The Assertion Data.\"}},\"getEarned(address)\":{\"params\":{\"user\":\"The address of a user that staked.\"},\"returns\":{\"_0\":\"The amount of tokens earned.\"}},\"getEstimatedReward(uint256,uint256)\":{\"details\":\"This calculation uses the current reward rate and the current totalSupply to calculate the rewards.the estimated result could be 0 if the estimated rewards are not high enough.\",\"params\":{\"amount\":\"How much token are staked.\",\"duration\":\"How long the tokens will be staked.\"},\"returns\":{\"_0\":\"The estimated amount of tokens earned.\"}},\"getFlagCount()\":{\"returns\":{\"flagCount_\":\"The number of flags.\"}},\"getFlags()\":{\"returns\":{\"flags_\":\"The flags this client will use.\"}},\"getKPI(uint256)\":{\"params\":{\"KPInum\":\"The number of the KPI to return.\"},\"returns\":{\"_0\":\"The KPI.\"}},\"getKPICounter()\":{\"returns\":{\"_0\":\"The KPI counter.\"}},\"getLastUpdate()\":{\"returns\":{\"_0\":\"The timestamp of last state change.\"}},\"getRewardRate()\":{\"returns\":{\"_0\":\"The reward rate.\"}},\"getRewardValue()\":{\"returns\":{\"_0\":\"The reward value.\"}},\"getRewardsEnd()\":{\"returns\":{\"_0\":\"The timestamp of when the rewards will end.\"}},\"getStakingToken()\":{\"returns\":{\"_0\":\"The address of the token.\"}},\"getTotalSupply()\":{\"returns\":{\"_0\":\"The total supply of staked tokens.\"}},\"grantModuleRole(bytes32,address)\":{\"params\":{\"role\":\"The role to grant.\",\"target\":\"The target address to grant the role to.\"}},\"grantModuleRoleBatched(bytes32,address[])\":{\"params\":{\"role\":\"The role to grant.\",\"targets\":\"The target addresses to grant the role to.\"}},\"identifier()\":{\"details\":\"The identifier is defined as the keccak256 hash of the module's         abi packed encoded major version, url and title.\",\"returns\":{\"_0\":\"The module's identifier.\"}},\"init(address,(uint256,uint256,uint256,string,string),bytes)\":{\"details\":\"CAN be overridden by downstream contract.MUST call `__Module_init()`.\",\"params\":{\"configData\":\"Variable config data for specific module                   implementations.\",\"metadata\":\"The module's metadata.\",\"orchestrator\":\"The module's {Orchestrator_v1} instance.\"}},\"isTrustedForwarder(address)\":{\"details\":\"We imitate here the EIP2771 Standard to enable metatransactions         As it currently stands we dont want to feed the forwarder address to each module individually and we decided to         move this to the orchestrator.\",\"params\":{\"forwarder\":\"The contract address to be verified.\"},\"returns\":{\"_0\":\"bool Is the given address the trusted forwarder.\"}},\"orchestrator()\":{\"returns\":{\"_0\":\"The module's {Orchestrator_1}.\"}},\"outstandingTokenAmount(address)\":{\"params\":{\"token_\":\"The token in which to pay.\"},\"returns\":{\"total_\":\"amount of token to pay.\"}},\"paymentOrders()\":{\"returns\":{\"_0\":\"list of payment orders.\"}},\"postAssertion(bytes32,uint256,address,uint256)\":{\"details\":\"about the asserter address: any address can be set as asserter, it will be expected to pay for the         bond on posting.         The bond tokens can also be deposited in the Module and used to pay for itself,         but ONLY if the bond token is different from the one being used for staking.         If the asserter is set to 0, whomever calls postAssertion will be paying the bond.\",\"params\":{\"assertedValue\":\"The target value that will be asserted and posted as data to the oracle.\",\"asserter\":\"The address of the asserter.\",\"dataId\":\"The dataId to be posted.\",\"targetKPI\":\"The KPI to be used for distribution once the assertion confirms.\"},\"returns\":{\"assertionId\":\"The assertionId received for the posted assertion.\"}},\"revokeModuleRole(bytes32,address)\":{\"params\":{\"role\":\"The role to revoke.\",\"target\":\"The target address to revoke the role from.\"}},\"revokeModuleRoleBatched(bytes32,address[])\":{\"params\":{\"role\":\"The role to revoke.\",\"targets\":\"The target addresses to revoke the role from.\"}},\"setDefaultAssertionLiveness(uint64)\":{\"params\":{\"_newLiveness\":\"The new liveness in seconds.\"}},\"setDefaultCurrencyAndBond(address,uint256)\":{\"params\":{\"_newBond\":\"The new bond amount.\",\"_newCurrency\":\"The address of the new default currency.\"}},\"setOptimisticOracle(address)\":{\"params\":{\"_newOO\":\"The address of the new OptimisticOracleV3 instance.\"}},\"setRewards(uint256,uint256)\":{\"details\":\"Equally distributes the reward amount over the given time period.\",\"params\":{\"amount\":\"How much token should be distributed.\",\"duration\":\"How much time it will take to distribute the token.\"}},\"stake(uint256)\":{\"details\":\"Should tokens already be staked, then the sending address will collect the rewards up until this point.Fee on transfer tokens are currently not supported.\",\"params\":{\"amount\":\"How much token should be staked.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"title()\":{\"returns\":{\"_0\":\"The module's title.\"}},\"trustedForwarder()\":{\"details\":\"We imitate here the EIP2771 Standard to enable metatransactions.         As it currently stands we dont want to feed the forwarder address to each module individually and we decided to         move this to the orchestrator.\",\"returns\":{\"_0\":\"address The trusted forwarder.\"}},\"unstake(uint256)\":{\"details\":\"this function will revert with a Over/Underflow error in case amount is higher than balance.\",\"params\":{\"amount\":\"How much token should be unstaked.\"}},\"url()\":{\"returns\":{\"_0\":\"The module's URL.\"}},\"version()\":{\"returns\":{\"_0\":\"The module's major version.\",\"_1\":\"The module's minor version.\",\"_2\":\"The module's patch version.\"}}},\"stateVariables\":{\"KPICounter\":{\"details\":\"The number of KPIs created.\"},\"__gap\":{\"details\":\"Storage gap for future upgrades.\"},\"assertionConfig\":{\"details\":\"Registry of Assertion Configurations assertionId -> RewardRoundConfiguration.\"},\"assertionPending\":{\"details\":\"For locking certain utilities when there are assertions open.\"},\"registryOfKPIs\":{\"details\":\"Registry of KPIsid -> KPI.\"}},\"title\":\"Inverter KPI Rewarder Module\",\"version\":1},\"userdoc\":{\"errors\":{\"Module_OrchestratorCallbackFailed(string)\":[{\"notice\":\"{Orchestrator_v1} callback triggered failed.\"}],\"Module__CallerNotAuthorized(bytes32,address)\":[{\"notice\":\"Function is only callable by authorized caller.\"}],\"Module__ERC20PaymentClientBase__CallerNotAuthorized()\":[{\"notice\":\"Function is only callable by authorized address.\"}],\"Module__ERC20PaymentClientBase__InsufficientFunds(address)\":[{\"notice\":\"Insufficient funds to fulfill the payment.\"}],\"Module__ERC20PaymentClientBase__InvalidAmount()\":[{\"notice\":\"Given amount invalid.\"}],\"Module__ERC20PaymentClientBase__InvalidPaymentOrder()\":[{\"notice\":\"Given paymentOrder is invalid.\"}],\"Module__ERC20PaymentClientBase__InvalidRecipient()\":[{\"notice\":\"Given recipient invalid.\"}],\"Module__ERC20PaymentClientBase__InvalidToken()\":[{\"notice\":\"Given token invalid.\"}],\"Module__ERC20PaymentClientBase__MismatchBetweenFlagCountAndArrayLength(uint8,uint256)\":[{\"notice\":\"Given mismatch between flag count and supplied array length.\"}],\"Module__ERC20PaymentClientBase__TokenTransferFailed()\":[{\"notice\":\"ERC20 token transfer failed.\"}],\"Module__ERC20PaymentClientBase_v2__FlagAmountTooHigh()\":[{\"notice\":\"Given number of flags exceeds the limit.\"}],\"Module__InvalidMetadata()\":[{\"notice\":\"Given metadata invalid.\"}],\"Module__InvalidOrchestratorAddress()\":[{\"notice\":\"Given {Orchestrator_v1} address invalid.\"}],\"Module__LM_PC_KPIRewarder_v2__AssertionNotStuck(bytes32)\":[{\"notice\":\"The assertion that is being removed was not stuck.\"}],\"Module__LM_PC_KPIRewarder_v2__CannotStakeWhenAssertionPending()\":[{\"notice\":\"The user cannot stake while an assertion is unresolved.\"}],\"Module__LM_PC_KPIRewarder_v2__InvalidKPINumber()\":[{\"notice\":\"The KPI number is invalid.\"}],\"Module__LM_PC_KPIRewarder_v2__InvalidKPITrancheValues()\":[{\"notice\":\"The values for the tranches are not in ascending order.\"}],\"Module__LM_PC_KPIRewarder_v2__InvalidKPIValueLengths()\":[{\"notice\":\"The number of tranches in the KPI does not match the number of rewards.\"}],\"Module__LM_PC_KPIRewarder_v2__InvalidTrancheNumber()\":[{\"notice\":\"The KPI beinge created has either no tranches or too many.\"}],\"Module__LM_PC_KPIRewarder_v2__ModuleCannotUseStakingTokenAsBond()\":[{\"notice\":\"The Token used paying the bond cannot be the same that is being staked.\"}],\"Module__LM_PC_KPIRewarder_v2__NonExistentAssertionId(bytes32)\":[{\"notice\":\"Callback received references non existent assertionId.\"}],\"Module__LM_PC_KPIRewarder_v2__UnresolvedAssertionExists()\":[{\"notice\":\"An assertion can only by posted if the preceding one is resolved.\"}],\"Module__LM_PC_Staking_v2__InvalidDuration()\":[{\"notice\":\"Given Duration is invalid.\"}],\"Module__LM_PC_Staking_v2__InvalidRewardRate()\":[{\"notice\":\"The calculated Reward rate is too low to be used.\"}],\"Module__LM_PC_Staking_v2__InvalidStakingToken()\":[{\"notice\":\"Given staking token address is invalid.\"}],\"Module__OnlyCallableByOrchestrator()\":[{\"notice\":\"Function is only callable by the {Orchestrator_v1}.\"}],\"Module__OnlyCallableByPaymentClient()\":[{\"notice\":\"Function is only callable by a {IERC20PaymentClientBase_v2}.\"}],\"Module__OptimisticOracleIntegrator_InsufficientFundsToPayForBond()\":[{\"notice\":\"Asserter holds insufficient funds to pay for bond.\"}],\"Module__OptimisticOracleIntegrator__CallerNotOO()\":[{\"notice\":\"Caller is not Optimistic Oracle instance.\"}],\"Module__OptimisticOracleIntegrator__CurrencyBondTooLow()\":[{\"notice\":\"Bond given for the specified currency is below minimum.\"}],\"Module__OptimisticOracleIntegrator__InvalidDefaultCurrency()\":[{\"notice\":\"Invalid default currency.\"}],\"Module__OptimisticOracleIntegrator__InvalidDefaultLiveness()\":[{\"notice\":\"Invalid default liveness.\"}],\"Module__OptimisticOracleIntegrator__InvalidOOInstance()\":[{\"notice\":\"Invalid Optimistic Oracle instance.\"}]},\"events\":{\"DataAsserted(bytes32,bytes32,address,bytes32)\":{\"notice\":\"Event emitted when data is asserted.\"},\"DataAssertionResolved(bool,bytes32,bytes32,address,bytes32)\":{\"notice\":\"Event emitted when dataAssetiong is resolved.\"},\"DeletedStuckAssertion(bytes32)\":{\"notice\":\"Event emitted when a stuck assertion gets deleted.\"},\"FeeFundsDeposited(address,uint256)\":{\"notice\":\"Event emitted when funds for paying the bonding fee are deposited into the contract.\"},\"FlagsSet(uint8,bytes32)\":{\"notice\":\"Emitted when the flags are set.\"},\"KPICreated(uint256,uint256,uint256,bool,uint256[],uint256[])\":{\"notice\":\"Event emitted when a KPI is created.\"},\"ModuleInitialized(address,(uint256,uint256,uint256,string,string))\":{\"notice\":\"Module has been initialized.\"},\"PaymentOrderAdded(address,address,uint256,uint256,uint256,bytes32,bytes32[])\":{\"notice\":\"Added a payment order.\"},\"ProtocolFeeTransferred(address,address,uint256)\":{\"notice\":\"Event emitted when protocol fee has been transferred to the treasury.\"},\"RewardRoundConfigured(bytes32,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when a reward round is configured.\"},\"RewardSet(uint256,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when a reward is added.\"},\"RewardsDistributed(address,uint256)\":{\"notice\":\"Event emitted when a user receives Rewards.\"},\"Staked(address,uint256)\":{\"notice\":\"Event emitted when a user stakes an amount.\"},\"StakingTokenSet(address)\":{\"notice\":\"Event emitted when staking token is set.\"},\"Unstaked(address,uint256)\":{\"notice\":\"Event emitted when a user unstakes an amount.\"},\"Updated(address,uint256,uint256,uint256)\":{\"notice\":\"Event emitted for each major change of state.\"}},\"kind\":\"user\",\"methods\":{\"amountPaid(address,uint256)\":{\"notice\":\"Notifies the PaymentClient, that tokens have been paid out accordingly.\"},\"assertDataFor(bytes32,bytes32,address)\":{\"notice\":\"Asserts data for a specific dataId on behalf of an asserter address.\"},\"assertionDisputedCallback(bytes32)\":{\"notice\":\"Callback function that is called by Optimistic Oracle V3 when an assertion is disputed.\"},\"assertionResolvedCallback(bytes32,bool)\":{\"notice\":\"Callback function that is called by Optimistic Oracle V3 when an assertion is resolved.\"},\"claimRewards()\":{\"notice\":\"Collects the rewards that are earned up until now.\"},\"collectPaymentOrders()\":{\"notice\":\"Collects outstanding payment orders.\"},\"createKPI(bool,uint256[],uint256[])\":{\"notice\":\"Creates a KPI for the Rewarder.\"},\"deleteStuckAssertion(bytes32)\":{\"notice\":\"Deletes a stuck assertion.\"},\"depositFeeFunds(uint256)\":{\"notice\":\"Deposits funds into the contract so it can pay for the oracle bond and fee itself.\"},\"getAssertion(bytes32)\":{\"notice\":\"For a given assertionId, returns the assserion itself.\"},\"getAssertionConfig(bytes32)\":{\"notice\":\"Returns the Assertion Configuration for a given assertionId.\"},\"getAssertionPending()\":{\"notice\":\"Returns the assertion pending flag.\"},\"getBalance(address)\":{\"notice\":\"Returns the amount of tokens a user staked in this contract.\"},\"getData(bytes32)\":{\"notice\":\"For a given assertionId, returns a boolean indicating whether the data is accessible         and the data itself.\"},\"getEarned(address)\":{\"notice\":\"Returns the amount of tokens earned up until now by the current stake of a user.\"},\"getEstimatedReward(uint256,uint256)\":{\"notice\":\"Returns a estimation of how much rewards will be earned with the current state of the staking contract.\"},\"getFlagCount()\":{\"notice\":\"Returns the number of flags this client uses for PaymentOrders.\"},\"getFlags()\":{\"notice\":\"Returns the flags used when creating payment orders in this         client.\"},\"getKPI(uint256)\":{\"notice\":\"Returns the KPI with the given number.\"},\"getKPICounter()\":{\"notice\":\"Returns the current KPI counter.\"},\"getLastUpdate()\":{\"notice\":\"Returns the timestamp of last state change.\"},\"getRewardRate()\":{\"notice\":\"Returns how much Tokens will be distributed per second to all users that staked in this contract.\"},\"getRewardValue()\":{\"notice\":\"Returns the reward value.\"},\"getRewardsEnd()\":{\"notice\":\"Returns when the rewards will not be distributed anymore.\"},\"getStakingToken()\":{\"notice\":\"Returns address of the token users can stake.\"},\"getTotalSupply()\":{\"notice\":\"Returns the total supply of staked tokens of this contract.\"},\"grantModuleRole(bytes32,address)\":{\"notice\":\"Grants a module role to a target address.\"},\"grantModuleRoleBatched(bytes32,address[])\":{\"notice\":\"Grants a module role to multiple target addresses.\"},\"identifier()\":{\"notice\":\"Returns the module's identifier.\"},\"init(address,(uint256,uint256,uint256,string,string),bytes)\":{\"notice\":\"The module's initializer function.\"},\"isTrustedForwarder(address)\":{\"notice\":\"Checks if the provided address is the trusted forwarder.\"},\"orchestrator()\":{\"notice\":\"Returns the module's {Orchestrator_v1} interface, {IOrchestrator_v1}.\"},\"outstandingTokenAmount(address)\":{\"notice\":\"Returns the total outstanding token payment amount.\"},\"paymentOrders()\":{\"notice\":\"Returns the list of outstanding payment orders.\"},\"postAssertion(bytes32,uint256,address,uint256)\":{\"notice\":\"Posts an assertion to the Optimistic Oracle, specifying the KPI to use and the asserted value.\"},\"revokeModuleRole(bytes32,address)\":{\"notice\":\"Revokes a module role from a target address.\"},\"revokeModuleRoleBatched(bytes32,address[])\":{\"notice\":\"Revokes a module role from multiple target addresses.\"},\"setDefaultAssertionLiveness(uint64)\":{\"notice\":\"Sets the default time assertions will be open for dispute.\"},\"setDefaultCurrencyAndBond(address,uint256)\":{\"notice\":\"Sets the default currency and amount for the bond.\"},\"setOptimisticOracle(address)\":{\"notice\":\"Sets the OptimisticOracleV3 instance where assertions will be published to.\"},\"setRewards(uint256,uint256)\":{\"notice\":\"Sets the rewards that are to be distributed.\"},\"stake(uint256)\":{\"notice\":\"Stake a specified amount of tokens to earn rewards.\"},\"title()\":{\"notice\":\"Returns the module's title.\"},\"trustedForwarder()\":{\"notice\":\"Returns the trusted forwarder.\"},\"unstake(uint256)\":{\"notice\":\"Unstake a specified amount of tokens and collect rewards.\"},\"url()\":{\"notice\":\"Returns the module's URL.\"},\"version()\":{\"notice\":\"Returns the module's version.\"}},\"notice\":\"Provides a mechanism for distributing rewards to stakers based          on Key Performance Indicators (KPIs).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/modules/logicModule/LM_PC_KPIRewarder_v2.sol\":\"LM_PC_KPIRewarder_v2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":750},\"remappings\":[\":@aut/=src/modules/authorizer/\",\":@df/=lib/deterministic-factory/src/\",\":@ex/=src/external/\",\":@fm/=src/modules/fundingManager/\",\":@lm/=src/modules/logicModule/\",\":@lm_pc/=src/modules/logicModule/paymentClient/\",\":@modLib/=src/modules/lib/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@oz/=lib/openzeppelin-contracts/contracts/\",\":@pp/=src/modules/paymentProcessor/\",\":@uma/=lib/uma-protocol/packages/core/contracts/\",\":deterministic-factory/=lib/deterministic-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/deterministic-factory/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":uma-protocol/=lib/uma-protocol/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/metatx/ERC2771ContextUpgradeable.sol\":{\"keccak256\":\"0x14b59e8cd5720c9cd31616450874b462f575bb52b387df2a54dbd26f9a07adf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://082df479035347a88472f330b089b421d798e4bb016f36b46ed80182e188b9ac\",\"dweb:/ipfs/QmZMCdVxCB3Lb5bf98YSF4HZFNShDkyyFg9Mg1s9oeM5ov\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45\",\"dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3\",\"dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/uma-protocol/packages/core/contracts/common/implementation/AncillaryData.sol\":{\"keccak256\":\"0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a\",\"dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2\"]},\"src/external/fees/interfaces/IFeeManager_v1.sol\":{\"keccak256\":\"0x655d93b595c66254f5432c3142c114da5479c75d4d67b59f9e221d58bf04ae7e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://54f7a5771189d06997dddc37b53082d3d8b747bd7fcb5efbeb8b4ee921d3e705\",\"dweb:/ipfs/QmQQvoJsRQbSg6od3P1Z7f83gyKVBjoM4PsaEPRAVW2icQ\"]},\"src/external/governance/interfaces/IGovernor_v1.sol\":{\"keccak256\":\"0xa81ca9425e5029ec50fb4ae8810cdb308afe038094946ba9b093739d9919e73e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://9e8ad2de7f26bdcfb2fde7d1ca5aa3553dd78f48540515f69a9a53ca12192e91\",\"dweb:/ipfs/QmTJNvwLBrWp25av97EeLVkxKbYVXvECEB1GDJqZXuVFK2\"]},\"src/external/interfaces/IERC2771Context.sol\":{\"keccak256\":\"0xdb0580aaaba4ae2c0d9e10412ff83f3c7efe99949e241a07ccfa1cb92a2ba0db\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://82fc191e17b3221d8965ed5da2560f29b1c25216be3515a73134da5761a6e421\",\"dweb:/ipfs/QmRUHmePb4mbtYnG69D2TX3Y7USfz97SCffFn9DR3jWruZ\"]},\"src/factories/interfaces/IModuleFactory_v1.sol\":{\"keccak256\":\"0x242182fa6fb04f642848a9b9ac7259df0109d7e6c872320f2f237d293c2e0b6d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a0e09c61a9c4d69f493e12c7c0f7376055a70cd8cde738ca64920706ad3495c9\",\"dweb:/ipfs/QmeQ1Pdtv5xkb37yXX8sGbUe7AGKEjGZar6H7jc5TxK3uf\"]},\"src/factories/interfaces/IOrchestratorFactory_v1.sol\":{\"keccak256\":\"0xfb9d598f8dae48593c457d36520414dd5f6ee5bbc2978c4413a561c03a8037b9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://677d9acc88f389fb3323b77bf0b0679a9461546d7c1dd30b7d44d3756dfe0d80\",\"dweb:/ipfs/QmW6CojPhFAu9WpmyJAVdNht5ZnF43Zu54zsVTcJzxuXYu\"]},\"src/modules/authorizer/IAuthorizer_v1.sol\":{\"keccak256\":\"0x07cda177f585d2dd94f54c4952e6dda485031ce4f68419eaf2f20a008d1a0888\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1b6434ad6f00da437a16e279cf3ac531d6d678df7978cb36e79a7011ff3f429e\",\"dweb:/ipfs/QmUuhJcpJfShLvhacrppPu4bKpjfXCvbvpCLNX6apwWGtW\"]},\"src/modules/base/IModule_v1.sol\":{\"keccak256\":\"0xb65a41b4f09b31b5be362c386368b11b108127b7967dee494204820d904d6c68\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://783eb2d07590a2506a5782a8be7635e561463e5cf8f570b3e800c8659ab5ae88\",\"dweb:/ipfs/QmRJfmMCdoe9cq1D7fyyGDZ3qTsAdeQe3QWdwgPThyDxFY\"]},\"src/modules/base/Module_v1.sol\":{\"keccak256\":\"0xacb11b21b5b6e0ea5ae273ad9054c75d1174cfb9a5dfd27e6447daf71f1ef1db\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://caad3925a4e28df6dd1795d9ef00c3b03239fad1906bbe71f2be018aadc97727\",\"dweb:/ipfs/QmWJgYCzdpFujykopsnbsHYrwWMVe6AyzJmre3tRg2gxHq\"]},\"src/modules/fundingManager/IFundingManager_v1.sol\":{\"keccak256\":\"0xe6c1d1bc7a0d7f33ca1a4637aa1ec0ad4dbf6e11eac145f4e8cf81e8eb54c4c4\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://d24621594eecad89facdf7f4bbeb3657c7ade3a75d6630f3afadbc10247afaf8\",\"dweb:/ipfs/QmZcnkbQovFALKYNpWA1J8GSoSDMiNbEA6dEtWBqh59o2H\"]},\"src/modules/lib/LibMetadata.sol\":{\"keccak256\":\"0x9a524b8697167b605c0b980b3e81688d448922ab38cd040f2b1c664946666c4a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5dd325f05f6812218a7f808af5afc1ec6cf95f1250c33d4dd1ad01ec4b041d50\",\"dweb:/ipfs/Qmem29JZSEpYLDqJn4cBxawGokbzo3taqHtb3UyyDvmB8G\"]},\"src/modules/logicModule/LM_PC_KPIRewarder_v2.sol\":{\"keccak256\":\"0xaa486304a9358daf1564b9972c264da12dde497bd679a8bc21a1d15046ce3bac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b0ecfc7a82cd13c04ee15db05ac6b3cbf59f5c102528e39d3d135ff7d8afef08\",\"dweb:/ipfs/QmfPPD8WrQQSS4XBhzjUru7Ke4FHSEoW6VEKtNbmRJHFjd\"]},\"src/modules/logicModule/LM_PC_Staking_v2.sol\":{\"keccak256\":\"0xe6508a557c6c3a8acc2fed435831bb6b944db9681fd13593cb2b53d7a5b10ef4\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3c418c8beeacf197cf5fdb3ab5156baa55a3add2afc025ff28ca2597e6095487\",\"dweb:/ipfs/QmTFxx1imu7U3MoZ2RLBT7LNq3jBdqbQ7jW5bWZjznQQTq\"]},\"src/modules/logicModule/abstracts/ERC20PaymentClientBase_v2.sol\":{\"keccak256\":\"0x325b0f101a119e5e591e0a634473f12c55a3bb912007539d293ecb7627cc232c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0585c27673e5bdb6547599415b7678921594d2a7f76e2356caad8ffb050d4ec3\",\"dweb:/ipfs/QmbJGwtZVkSa1X4Dkk2Vfsf5Z6D41tyRLyqADzZNdockM4\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/IOptimisticOracleIntegrator.sol\":{\"keccak256\":\"0x440b316ad88141e6fadc3cb1505df9bd4d4fc998df472fd1fae612cc71ceb0af\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e87cae6ecaa56d1ee6b7544a29a2b0b3e2c8de044311ed964d638f6fbe34bbe3\",\"dweb:/ipfs/QmSzdJ3buR5nWFki77jZpchvZos25K1GY2VSx6FVPvv7s4\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/OptimisticOracleIntegrator.sol\":{\"keccak256\":\"0xcd3f5c011abfde4977beee9b583702f21be09e515bc40c86d128ea46630dc2db\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4b8c1d6c884906312c5e9540066ddb65bc2bf4cab7013fb00a5f019553b00474\",\"dweb:/ipfs/QmWe28z6xQmDMZpnNRu1Xz6zYxZvN8Gkwib9gTjSunhARx\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/ClaimData.sol\":{\"keccak256\":\"0x15ff9d5c58afe8172fb6e0177fa4214169749811b7aa4b6b8295647aefc77e80\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://65d7a6e5fa55575b183b1ea0410d4fb2aee17eb2e1214be6f56810394839d060\",\"dweb:/ipfs/QmUkEea5rcn2vE3m1fJGFRHUJiSaHCZXYxQc5RqA8yguHe\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol\":{\"keccak256\":\"0x74154dc8037b4f8b934e0df8d92a1110d571a00bdfc6bc485c3e1c5bf4bc9d02\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9e3f5e3cd3a262da4442fc55f8499cc9de2b4d751152405ac82a5098db22b27e\",\"dweb:/ipfs/QmWuALHseY4LWHNfZRWeE25Fu3ZZukZWMR1s32ggoKArcB\"]},\"src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol\":{\"keccak256\":\"0xa224d49e21e46e2548bff547bcabbb950849ca9705c9149651e273a1be907760\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7ede70c9959f574b80d6fbc24bb3edab598c200b5402d8c2a7fc7f68193d1d7d\",\"dweb:/ipfs/QmVeQctwAzm9ACcKdxFs7kbuuUWtEzABen2GbakoecuYaf\"]},\"src/modules/logicModule/interfaces/IERC20PaymentClientBase_v1.sol\":{\"keccak256\":\"0xe3a2f6fd8ad6b79d74174a07422a4e455f21a4dbd4b1adbff379e1b5374bef00\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://88b49ae256b7f0c455b4915187c7fd42906ac817c571599d6e66052a9c5517b1\",\"dweb:/ipfs/QmcHBtkPEK5i55K6wdSiGyci9v1NULhZ3E4HKhaLtJGHFr\"]},\"src/modules/logicModule/interfaces/IERC20PaymentClientBase_v2.sol\":{\"keccak256\":\"0x1399343fea0ca35abf73a9e2776281db7fb3c8611511b00faf1801deecdd63f2\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://2add85157d2ec4722f71bb40ee1ed2a506d1cdbc7e4e3b9eaa0ce494f427c22b\",\"dweb:/ipfs/QmWVq7CVttekQuQDZwkCvApHEUydfKgYBXvBSCemxDJWke\"]},\"src/modules/logicModule/interfaces/ILM_PC_KPIRewarder_v2.sol\":{\"keccak256\":\"0xf571275b7ae350c4e7d8631fdf98139d1a36cc9899fe8fad323cd63781094fae\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://470af09473b192ab00ac4d83b01d6c53e7ec1cb29ffbb12d038d5e1469fe9c1f\",\"dweb:/ipfs/Qmaso3wwwoJ7tYpCBGwmvikKDTULz8YByQ9A1qee3ZdKYL\"]},\"src/modules/logicModule/interfaces/ILM_PC_Staking_v2.sol\":{\"keccak256\":\"0x1b4556835c533ac922b1f9142acce740fb3bb2469e8244aecc08667de80c688d\",\"urls\":[\"bzz-raw://194cfcb1ad59c7d035fd74582341339189fad02af9979d6a28861da084e89a01\",\"dweb:/ipfs/QmWrG567qwc51JJD3EJ18iqgQnBvpp94PVUHi7Np9yzKwx\"]},\"src/modules/paymentProcessor/IPaymentProcessor_v1.sol\":{\"keccak256\":\"0xbe30278dcc494faf27c106a7fc89a25d40ad8d7fbc1b4af8d6a524f62286320e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://65d9bcbc6bafcf1388b43f46f57ac54fa20dc270a178dccefa364b15c786c7d0\",\"dweb:/ipfs/QmZchyENTGcCDiVUFKs1tY9BfRmaWgaMzxM5uM5LDHVPuc\"]},\"src/modules/paymentProcessor/IPaymentProcessor_v2.sol\":{\"keccak256\":\"0x8d45f6d5dbb01beeee65158eef9520fab7bda09452fe836142122e37682daa9b\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://39f706ba7c68d384c8d815ca737b9e024692e49bb9c930ea70b207d9bf23d4f9\",\"dweb:/ipfs/QmdYS1aCUmtWTymRaUGLR8e9YK7v4s9JMxPoaMMoMnebHD\"]},\"src/orchestrator/interfaces/IModuleManagerBase_v1.sol\":{\"keccak256\":\"0x2abd1abb278da305c6a47d11ef31ef7a7de2aebf017957b0013497de8e2aa2eb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5d49aac1e351f80bce5c27fb0934577d64551c25fcbad6dd172b6eee7b8bf57a\",\"dweb:/ipfs/QmRdR4Ut7gV9Zp295ciYnwYqjdXKxZAAegVhtsGpetiwsC\"]},\"src/orchestrator/interfaces/IOrchestrator_v1.sol\":{\"keccak256\":\"0xefa7776b6fcebcd49da7398c0ebb56210138818e1e20baa4c174d1a5f45eca7f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dde9c8d7982913b904aa0b27384958658ebcdd4b37fa70d409014d8b116f59dc\",\"dweb:/ipfs/QmfJtQvdSyTkzonanLABKVvRp13bqGQRWu4ZfeRGfqRmAn\"]},\"src/proxies/interfaces/IInverterBeacon_v1.sol\":{\"keccak256\":\"0x23cd7a4ada497ebd9834d521843673881427d563906662156e748366a6a03fb5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://49cbce7e794b38126494ee0c4a26f9807fc284e0e5c59ad8a1a229e60f196e66\",\"dweb:/ipfs/Qma3hZfASQ6Gaa4anDhTmhNA1HPiYSD6eJ9Gnn817rP8VJ\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.23+commit.f704f362" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        {
          "inputs": [
            { "internalType": "string", "name": "funcSig", "type": "string" }
          ],
          "type": "error",
          "name": "Module_OrchestratorCallbackFailed"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "Module__CallerNotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__CallerNotAuthorized"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InsufficientFunds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InvalidAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InvalidPaymentOrder"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InvalidRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__InvalidToken"
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "flagCount", "type": "uint8" },
            {
              "internalType": "uint256",
              "name": "arrayLength",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__MismatchBetweenFlagCountAndArrayLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase__TokenTransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__ERC20PaymentClientBase_v2__FlagAmountTooHigh"
        },
        { "inputs": [], "type": "error", "name": "Module__InvalidAddress" },
        { "inputs": [], "type": "error", "name": "Module__InvalidMetadata" },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__InvalidOrchestratorAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v2__AssertionNotStuck"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v2__CannotStakeWhenAssertionPending"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v2__InvalidKPINumber"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v2__InvalidKPITrancheValues"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v2__InvalidKPIValueLengths"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v2__InvalidTrancheNumber"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v2__ModuleCannotUseStakingTokenAsBond"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v2__NonExistentAssertionId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_KPIRewarder_v2__UnresolvedAssertionExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_Staking_v2__InvalidDuration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_Staking_v2__InvalidRewardRate"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__LM_PC_Staking_v2__InvalidStakingToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OnlyCallableByOrchestrator"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OnlyCallableByPaymentClient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator_InsufficientFundsToPayForBond"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__CallerNotOO"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__CurrencyBondTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__InvalidDefaultCurrency"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__InvalidDefaultLiveness"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Module__OptimisticOracleIntegrator__InvalidOOInstance"
        },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAsserted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "assertedTruthfully",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "dataId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "data",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DataAssertionResolved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DeletedStuckAssertion",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeeFundsDeposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "flagCount",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "newFlags",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlagsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "KPI_Id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "numOfTranches",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalKPIRewards",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "continuous",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "trancheValues",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "trancheRewards",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "KPICreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "parentOrchestrator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IModule_v1.Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "majorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "patchVersion",
                  "type": "uint256"
                },
                { "internalType": "string", "name": "url", "type": "string" },
                { "internalType": "string", "name": "title", "type": "string" }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ModuleInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "originChainId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "targetChainId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "flags",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PaymentOrderAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "treasury",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProtocolFeeTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "creationTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "assertedValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "KpiToUse",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RewardRoundConfigured",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardRate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newRewardsEnd",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardsDistributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakingTokenSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unstaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "triggerAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lastUpdate",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "earnedRewards",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Updated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ASSERTER_ROLE",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token_", "type": "address" },
            { "internalType": "uint256", "name": "amount_", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "amountPaid"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "dataId", "type": "bytes32" },
            { "internalType": "bytes32", "name": "data_", "type": "bytes32" },
            { "internalType": "address", "name": "asserter", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertDataFor",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionData",
          "outputs": [
            { "internalType": "bytes32", "name": "dataId", "type": "bytes32" },
            { "internalType": "bytes32", "name": "data", "type": "bytes32" },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            { "internalType": "bool", "name": "resolved", "type": "bool" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionDisputedCallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "assertionLiveness",
          "outputs": [
            { "internalType": "uint64", "name": "", "type": "uint64" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "assertedTruthfully",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assertionResolvedCallback"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectPaymentOrders",
          "outputs": [
            {
              "internalType": "struct IERC20PaymentClientBase_v2.PaymentOrder[]",
              "name": "paymentOrders_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymentToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "originChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "targetChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "flags",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ]
            },
            {
              "internalType": "address[]",
              "name": "tokens_",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "totalAmounts_",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bool", "name": "_continuous", "type": "bool" },
            {
              "internalType": "uint256[]",
              "name": "_trancheValues",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_trancheRewards",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createKPI",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultBond",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultCurrency",
          "outputs": [
            { "internalType": "contract IERC20", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultIdentifier",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteStuckAssertion"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositFeeFunds"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertion",
          "outputs": [
            {
              "internalType": "struct IOptimisticOracleIntegrator.DataAssertion",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "dataId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "data",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "asserter",
                  "type": "address"
                },
                { "internalType": "bool", "name": "resolved", "type": "bool" }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertionConfig",
          "outputs": [
            {
              "internalType": "struct ILM_PC_KPIRewarder_v2.RewardRoundConfiguration",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "creationTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assertedValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "KpiToUse",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "distributed",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAssertionPending",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalance",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getData",
          "outputs": [
            { "internalType": "bool", "name": "", "type": "bool" },
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEarned",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "internalType": "uint256", "name": "duration", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEstimatedReward",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlagCount",
          "outputs": [
            { "internalType": "uint8", "name": "flagCount_", "type": "uint8" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFlags",
          "outputs": [
            { "internalType": "bytes32", "name": "flags_", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "KPInum", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getKPI",
          "outputs": [
            {
              "internalType": "struct ILM_PC_KPIRewarder_v2.KPI",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "numOfTranches",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalRewards",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "continuous",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "trancheValues",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "trancheRewards",
                  "type": "uint256[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getKPICounter",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLastUpdate",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardRate",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardValue",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardsEnd",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingToken",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalSupply",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantModuleRole"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantModuleRoleBatched"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "identifier",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IOrchestrator_v1",
              "name": "orchestrator_",
              "type": "address"
            },
            {
              "internalType": "struct IModule_v1.Metadata",
              "name": "metadata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "majorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minorVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "patchVersion",
                  "type": "uint256"
                },
                { "internalType": "string", "name": "url", "type": "string" },
                { "internalType": "string", "name": "title", "type": "string" }
              ]
            },
            { "internalType": "bytes", "name": "configData", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oo",
          "outputs": [
            {
              "internalType": "contract OptimisticOracleV3Interface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "orchestrator",
          "outputs": [
            {
              "internalType": "contract IOrchestrator_v1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token_", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "outstandingTokenAmount",
          "outputs": [
            { "internalType": "uint256", "name": "total_", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paymentOrders",
          "outputs": [
            {
              "internalType": "struct IERC20PaymentClientBase_v2.PaymentOrder[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "paymentToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "originChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "targetChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "flags",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "data",
                  "type": "bytes32[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "dataId", "type": "bytes32" },
            {
              "internalType": "uint256",
              "name": "assertedValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "asserter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "targetKPI",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postAssertion",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "assertionId",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeModuleRole"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            {
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeModuleRoleBatched"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "_newLiveness",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultAssertionLiveness"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newCurrency",
              "type": "address"
            },
            { "internalType": "uint256", "name": "_newBond", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultCurrencyAndBond"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_newOO", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOptimisticOracle"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "internalType": "uint256", "name": "duration", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewards"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "title",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "trustedForwarder",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "url",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "amountPaid(address,uint256)": {
            "details": "Payment Client will reduce the total amount of tokens it will stock up by the given amount.This has to be called by a paymentProcessor.",
            "params": {
              "amount_": "amount of tokens that have been paid out.",
              "token_": "The token in which the payment was made."
            }
          },
          "assertDataFor(bytes32,bytes32,address)": {
            "details": "Data can be asserted many times with the same combination of arguments, resulting in unique assertionIds.         This is because the block.timestamp is included in the claim. The consumer contract must         store the returned assertionId identifiers to able to get the information using getData.",
            "params": {
              "asserter": "The address doing the asserter. If zero defaults to _msgSender().",
              "data": "The data to assert.",
              "dataId": "The id of the data to assert."
            },
            "returns": { "assertionId": "The id of the generated Assertion." }
          },
          "assertionDisputedCallback(bytes32)": {
            "details": "This OptimisticOracleV3 callback function needs to be defined so the OOv3 doesn't revert when it tries",
            "params": {
              "assertionId": "The identifier of the assertion that was disputed."
            }
          },
          "assertionResolvedCallback(bytes32,bool)": {
            "params": {
              "assertedTruthfully": "Whether the assertion was resolved as truthful or not.",
              "assertionId": "The identifier of the assertion that was resolved."
            }
          },
          "claimRewards()": {
            "details": "Reaps the rewards collected up to this point for the msg.Sender()."
          },
          "collectPaymentOrders()": {
            "details": "Marks the orders as completed for the client.",
            "returns": {
              "paymentOrders_": "list of payment orders.",
              "tokens_": "list of token addresses.",
              "totalAmounts_": "list of amounts."
            }
          },
          "createKPI(bool,uint256[],uint256[])": {
            "params": {
              "_continuous": "Should the tranche rewards be distributed continuously or in steps.",
              "_trancheRewards": "The rewards to be distributed at completion of each tranche.",
              "_trancheValues": "The value at which the tranches end."
            },
            "returns": { "_0": "The KPI id." }
          },
          "deleteStuckAssertion(bytes32)": {
            "details": "This function is only callable by the Orchestrator Admin.",
            "params": { "assertionId": "The id of the assertion to delete." }
          },
          "depositFeeFunds(uint256)": {
            "details": "Top up funds to pay the optimistic oracle fee",
            "params": { "amount": "The amount to deposit." }
          },
          "getAssertion(bytes32)": {
            "params": { "assertionId": "The id of the Assertion to return." },
            "returns": { "_0": "DataAssertion The Assertion." }
          },
          "getAssertionConfig(bytes32)": {
            "params": { "assertionId": "The id of the Assertion to return." },
            "returns": { "_0": "The Assertion Configuration." }
          },
          "getAssertionPending()": {
            "returns": { "_0": "The assertion pending flag." }
          },
          "getBalance(address)": {
            "params": { "user": "The address of a user that staked." }
          },
          "getData(bytes32)": {
            "params": { "assertionId": "The id of the Assertion to return." },
            "returns": {
              "_0": "bool Wether the assertion is resolved.",
              "_1": "bytes32 The Assertion Data."
            }
          },
          "getEarned(address)": {
            "params": { "user": "The address of a user that staked." },
            "returns": { "_0": "The amount of tokens earned." }
          },
          "getEstimatedReward(uint256,uint256)": {
            "details": "This calculation uses the current reward rate and the current totalSupply to calculate the rewards.the estimated result could be 0 if the estimated rewards are not high enough.",
            "params": {
              "amount": "How much token are staked.",
              "duration": "How long the tokens will be staked."
            },
            "returns": { "_0": "The estimated amount of tokens earned." }
          },
          "getFlagCount()": {
            "returns": { "flagCount_": "The number of flags." }
          },
          "getFlags()": {
            "returns": { "flags_": "The flags this client will use." }
          },
          "getKPI(uint256)": {
            "params": { "KPInum": "The number of the KPI to return." },
            "returns": { "_0": "The KPI." }
          },
          "getKPICounter()": { "returns": { "_0": "The KPI counter." } },
          "getLastUpdate()": {
            "returns": { "_0": "The timestamp of last state change." }
          },
          "getRewardRate()": { "returns": { "_0": "The reward rate." } },
          "getRewardValue()": { "returns": { "_0": "The reward value." } },
          "getRewardsEnd()": {
            "returns": { "_0": "The timestamp of when the rewards will end." }
          },
          "getStakingToken()": {
            "returns": { "_0": "The address of the token." }
          },
          "getTotalSupply()": {
            "returns": { "_0": "The total supply of staked tokens." }
          },
          "grantModuleRole(bytes32,address)": {
            "params": {
              "role": "The role to grant.",
              "target": "The target address to grant the role to."
            }
          },
          "grantModuleRoleBatched(bytes32,address[])": {
            "params": {
              "role": "The role to grant.",
              "targets": "The target addresses to grant the role to."
            }
          },
          "identifier()": {
            "details": "The identifier is defined as the keccak256 hash of the module's         abi packed encoded major version, url and title.",
            "returns": { "_0": "The module's identifier." }
          },
          "init(address,(uint256,uint256,uint256,string,string),bytes)": {
            "details": "CAN be overridden by downstream contract.MUST call `__Module_init()`.",
            "params": {
              "configData": "Variable config data for specific module                   implementations.",
              "metadata": "The module's metadata.",
              "orchestrator": "The module's {Orchestrator_v1} instance."
            }
          },
          "isTrustedForwarder(address)": {
            "details": "We imitate here the EIP2771 Standard to enable metatransactions         As it currently stands we dont want to feed the forwarder address to each module individually and we decided to         move this to the orchestrator.",
            "params": { "forwarder": "The contract address to be verified." },
            "returns": {
              "_0": "bool Is the given address the trusted forwarder."
            }
          },
          "orchestrator()": {
            "returns": { "_0": "The module's {Orchestrator_1}." }
          },
          "outstandingTokenAmount(address)": {
            "params": { "token_": "The token in which to pay." },
            "returns": { "total_": "amount of token to pay." }
          },
          "paymentOrders()": { "returns": { "_0": "list of payment orders." } },
          "postAssertion(bytes32,uint256,address,uint256)": {
            "details": "about the asserter address: any address can be set as asserter, it will be expected to pay for the         bond on posting.         The bond tokens can also be deposited in the Module and used to pay for itself,         but ONLY if the bond token is different from the one being used for staking.         If the asserter is set to 0, whomever calls postAssertion will be paying the bond.",
            "params": {
              "assertedValue": "The target value that will be asserted and posted as data to the oracle.",
              "asserter": "The address of the asserter.",
              "dataId": "The dataId to be posted.",
              "targetKPI": "The KPI to be used for distribution once the assertion confirms."
            },
            "returns": {
              "assertionId": "The assertionId received for the posted assertion."
            }
          },
          "revokeModuleRole(bytes32,address)": {
            "params": {
              "role": "The role to revoke.",
              "target": "The target address to revoke the role from."
            }
          },
          "revokeModuleRoleBatched(bytes32,address[])": {
            "params": {
              "role": "The role to revoke.",
              "targets": "The target addresses to revoke the role from."
            }
          },
          "setDefaultAssertionLiveness(uint64)": {
            "params": { "_newLiveness": "The new liveness in seconds." }
          },
          "setDefaultCurrencyAndBond(address,uint256)": {
            "params": {
              "_newBond": "The new bond amount.",
              "_newCurrency": "The address of the new default currency."
            }
          },
          "setOptimisticOracle(address)": {
            "params": {
              "_newOO": "The address of the new OptimisticOracleV3 instance."
            }
          },
          "setRewards(uint256,uint256)": {
            "details": "Equally distributes the reward amount over the given time period.",
            "params": {
              "amount": "How much token should be distributed.",
              "duration": "How much time it will take to distribute the token."
            }
          },
          "stake(uint256)": {
            "details": "Should tokens already be staked, then the sending address will collect the rewards up until this point.Fee on transfer tokens are currently not supported.",
            "params": { "amount": "How much token should be staked." }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "title()": { "returns": { "_0": "The module's title." } },
          "trustedForwarder()": {
            "details": "We imitate here the EIP2771 Standard to enable metatransactions.         As it currently stands we dont want to feed the forwarder address to each module individually and we decided to         move this to the orchestrator.",
            "returns": { "_0": "address The trusted forwarder." }
          },
          "unstake(uint256)": {
            "details": "this function will revert with a Over/Underflow error in case amount is higher than balance.",
            "params": { "amount": "How much token should be unstaked." }
          },
          "url()": { "returns": { "_0": "The module's URL." } },
          "version()": {
            "returns": {
              "_0": "The module's major version.",
              "_1": "The module's minor version.",
              "_2": "The module's patch version."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "amountPaid(address,uint256)": {
            "notice": "Notifies the PaymentClient, that tokens have been paid out accordingly."
          },
          "assertDataFor(bytes32,bytes32,address)": {
            "notice": "Asserts data for a specific dataId on behalf of an asserter address."
          },
          "assertionDisputedCallback(bytes32)": {
            "notice": "Callback function that is called by Optimistic Oracle V3 when an assertion is disputed."
          },
          "assertionResolvedCallback(bytes32,bool)": {
            "notice": "Callback function that is called by Optimistic Oracle V3 when an assertion is resolved."
          },
          "claimRewards()": {
            "notice": "Collects the rewards that are earned up until now."
          },
          "collectPaymentOrders()": {
            "notice": "Collects outstanding payment orders."
          },
          "createKPI(bool,uint256[],uint256[])": {
            "notice": "Creates a KPI for the Rewarder."
          },
          "deleteStuckAssertion(bytes32)": {
            "notice": "Deletes a stuck assertion."
          },
          "depositFeeFunds(uint256)": {
            "notice": "Deposits funds into the contract so it can pay for the oracle bond and fee itself."
          },
          "getAssertion(bytes32)": {
            "notice": "For a given assertionId, returns the assserion itself."
          },
          "getAssertionConfig(bytes32)": {
            "notice": "Returns the Assertion Configuration for a given assertionId."
          },
          "getAssertionPending()": {
            "notice": "Returns the assertion pending flag."
          },
          "getBalance(address)": {
            "notice": "Returns the amount of tokens a user staked in this contract."
          },
          "getData(bytes32)": {
            "notice": "For a given assertionId, returns a boolean indicating whether the data is accessible         and the data itself."
          },
          "getEarned(address)": {
            "notice": "Returns the amount of tokens earned up until now by the current stake of a user."
          },
          "getEstimatedReward(uint256,uint256)": {
            "notice": "Returns a estimation of how much rewards will be earned with the current state of the staking contract."
          },
          "getFlagCount()": {
            "notice": "Returns the number of flags this client uses for PaymentOrders."
          },
          "getFlags()": {
            "notice": "Returns the flags used when creating payment orders in this         client."
          },
          "getKPI(uint256)": {
            "notice": "Returns the KPI with the given number."
          },
          "getKPICounter()": { "notice": "Returns the current KPI counter." },
          "getLastUpdate()": {
            "notice": "Returns the timestamp of last state change."
          },
          "getRewardRate()": {
            "notice": "Returns how much Tokens will be distributed per second to all users that staked in this contract."
          },
          "getRewardValue()": { "notice": "Returns the reward value." },
          "getRewardsEnd()": {
            "notice": "Returns when the rewards will not be distributed anymore."
          },
          "getStakingToken()": {
            "notice": "Returns address of the token users can stake."
          },
          "getTotalSupply()": {
            "notice": "Returns the total supply of staked tokens of this contract."
          },
          "grantModuleRole(bytes32,address)": {
            "notice": "Grants a module role to a target address."
          },
          "grantModuleRoleBatched(bytes32,address[])": {
            "notice": "Grants a module role to multiple target addresses."
          },
          "identifier()": { "notice": "Returns the module's identifier." },
          "init(address,(uint256,uint256,uint256,string,string),bytes)": {
            "notice": "The module's initializer function."
          },
          "isTrustedForwarder(address)": {
            "notice": "Checks if the provided address is the trusted forwarder."
          },
          "orchestrator()": {
            "notice": "Returns the module's {Orchestrator_v1} interface, {IOrchestrator_v1}."
          },
          "outstandingTokenAmount(address)": {
            "notice": "Returns the total outstanding token payment amount."
          },
          "paymentOrders()": {
            "notice": "Returns the list of outstanding payment orders."
          },
          "postAssertion(bytes32,uint256,address,uint256)": {
            "notice": "Posts an assertion to the Optimistic Oracle, specifying the KPI to use and the asserted value."
          },
          "revokeModuleRole(bytes32,address)": {
            "notice": "Revokes a module role from a target address."
          },
          "revokeModuleRoleBatched(bytes32,address[])": {
            "notice": "Revokes a module role from multiple target addresses."
          },
          "setDefaultAssertionLiveness(uint64)": {
            "notice": "Sets the default time assertions will be open for dispute."
          },
          "setDefaultCurrencyAndBond(address,uint256)": {
            "notice": "Sets the default currency and amount for the bond."
          },
          "setOptimisticOracle(address)": {
            "notice": "Sets the OptimisticOracleV3 instance where assertions will be published to."
          },
          "setRewards(uint256,uint256)": {
            "notice": "Sets the rewards that are to be distributed."
          },
          "stake(uint256)": {
            "notice": "Stake a specified amount of tokens to earn rewards."
          },
          "title()": { "notice": "Returns the module's title." },
          "trustedForwarder()": { "notice": "Returns the trusted forwarder." },
          "unstake(uint256)": {
            "notice": "Unstake a specified amount of tokens and collect rewards."
          },
          "url()": { "notice": "Returns the module's URL." },
          "version()": { "notice": "Returns the module's version." }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aut/=src/modules/authorizer/",
        "@df/=lib/deterministic-factory/src/",
        "@ex/=src/external/",
        "@fm/=src/modules/fundingManager/",
        "@lm/=src/modules/logicModule/",
        "@lm_pc/=src/modules/logicModule/paymentClient/",
        "@modLib/=src/modules/lib/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@oz-up/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@oz/=lib/openzeppelin-contracts/contracts/",
        "@pp/=src/modules/paymentProcessor/",
        "@uma/=lib/uma-protocol/packages/core/contracts/",
        "deterministic-factory/=lib/deterministic-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/deterministic-factory/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "uma-protocol/=lib/uma-protocol/"
      ],
      "optimizer": { "enabled": true, "runs": 750 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "src/modules/logicModule/LM_PC_KPIRewarder_v2.sol": "LM_PC_KPIRewarder_v2"
      },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/metatx/ERC2771ContextUpgradeable.sol": {
        "keccak256": "0x14b59e8cd5720c9cd31616450874b462f575bb52b387df2a54dbd26f9a07adf8",
        "urls": [
          "bzz-raw://082df479035347a88472f330b089b421d798e4bb016f36b46ed80182e188b9ac",
          "dweb:/ipfs/QmZMCdVxCB3Lb5bf98YSF4HZFNShDkyyFg9Mg1s9oeM5ov"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74",
        "urls": [
          "bzz-raw://942dad22fbdc1669f025540ba63aa3ccfad5f8458fc5d4525b31ebf272e7af45",
          "dweb:/ipfs/Qmdo4X2M82aM3AMoW2kf2jhYkSCyC4T1pHNd6obdsDFnAB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8",
        "urls": [
          "bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45",
          "dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41",
        "urls": [
          "bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26",
          "dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/extensions/IAccessControlEnumerable.sol": {
        "keccak256": "0xc1435f102633849858e75d7bed14c636f25448ceb3406d82992b0f2df52f4306",
        "urls": [
          "bzz-raw://ce1815e3a1da24f91b8e2ec24cf09d0d46e0fbeddcbe2cb0d8b2e05b91ceb7b3",
          "dweb:/ipfs/QmYTy1AQB5EV5jwuGsB49yykng2oG3x5ss4bDjFNxk3He4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/uma-protocol/packages/core/contracts/common/implementation/AncillaryData.sol": {
        "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
        "urls": [
          "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
          "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/fees/interfaces/IFeeManager_v1.sol": {
        "keccak256": "0x655d93b595c66254f5432c3142c114da5479c75d4d67b59f9e221d58bf04ae7e",
        "urls": [
          "bzz-raw://54f7a5771189d06997dddc37b53082d3d8b747bd7fcb5efbeb8b4ee921d3e705",
          "dweb:/ipfs/QmQQvoJsRQbSg6od3P1Z7f83gyKVBjoM4PsaEPRAVW2icQ"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/external/governance/interfaces/IGovernor_v1.sol": {
        "keccak256": "0xa81ca9425e5029ec50fb4ae8810cdb308afe038094946ba9b093739d9919e73e",
        "urls": [
          "bzz-raw://9e8ad2de7f26bdcfb2fde7d1ca5aa3553dd78f48540515f69a9a53ca12192e91",
          "dweb:/ipfs/QmTJNvwLBrWp25av97EeLVkxKbYVXvECEB1GDJqZXuVFK2"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/external/interfaces/IERC2771Context.sol": {
        "keccak256": "0xdb0580aaaba4ae2c0d9e10412ff83f3c7efe99949e241a07ccfa1cb92a2ba0db",
        "urls": [
          "bzz-raw://82fc191e17b3221d8965ed5da2560f29b1c25216be3515a73134da5761a6e421",
          "dweb:/ipfs/QmRUHmePb4mbtYnG69D2TX3Y7USfz97SCffFn9DR3jWruZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/factories/interfaces/IModuleFactory_v1.sol": {
        "keccak256": "0x242182fa6fb04f642848a9b9ac7259df0109d7e6c872320f2f237d293c2e0b6d",
        "urls": [
          "bzz-raw://a0e09c61a9c4d69f493e12c7c0f7376055a70cd8cde738ca64920706ad3495c9",
          "dweb:/ipfs/QmeQ1Pdtv5xkb37yXX8sGbUe7AGKEjGZar6H7jc5TxK3uf"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/factories/interfaces/IOrchestratorFactory_v1.sol": {
        "keccak256": "0xfb9d598f8dae48593c457d36520414dd5f6ee5bbc2978c4413a561c03a8037b9",
        "urls": [
          "bzz-raw://677d9acc88f389fb3323b77bf0b0679a9461546d7c1dd30b7d44d3756dfe0d80",
          "dweb:/ipfs/QmW6CojPhFAu9WpmyJAVdNht5ZnF43Zu54zsVTcJzxuXYu"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/authorizer/IAuthorizer_v1.sol": {
        "keccak256": "0x07cda177f585d2dd94f54c4952e6dda485031ce4f68419eaf2f20a008d1a0888",
        "urls": [
          "bzz-raw://1b6434ad6f00da437a16e279cf3ac531d6d678df7978cb36e79a7011ff3f429e",
          "dweb:/ipfs/QmUuhJcpJfShLvhacrppPu4bKpjfXCvbvpCLNX6apwWGtW"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/base/IModule_v1.sol": {
        "keccak256": "0xb65a41b4f09b31b5be362c386368b11b108127b7967dee494204820d904d6c68",
        "urls": [
          "bzz-raw://783eb2d07590a2506a5782a8be7635e561463e5cf8f570b3e800c8659ab5ae88",
          "dweb:/ipfs/QmRJfmMCdoe9cq1D7fyyGDZ3qTsAdeQe3QWdwgPThyDxFY"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/base/Module_v1.sol": {
        "keccak256": "0xacb11b21b5b6e0ea5ae273ad9054c75d1174cfb9a5dfd27e6447daf71f1ef1db",
        "urls": [
          "bzz-raw://caad3925a4e28df6dd1795d9ef00c3b03239fad1906bbe71f2be018aadc97727",
          "dweb:/ipfs/QmWJgYCzdpFujykopsnbsHYrwWMVe6AyzJmre3tRg2gxHq"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/fundingManager/IFundingManager_v1.sol": {
        "keccak256": "0xe6c1d1bc7a0d7f33ca1a4637aa1ec0ad4dbf6e11eac145f4e8cf81e8eb54c4c4",
        "urls": [
          "bzz-raw://d24621594eecad89facdf7f4bbeb3657c7ade3a75d6630f3afadbc10247afaf8",
          "dweb:/ipfs/QmZcnkbQovFALKYNpWA1J8GSoSDMiNbEA6dEtWBqh59o2H"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/lib/LibMetadata.sol": {
        "keccak256": "0x9a524b8697167b605c0b980b3e81688d448922ab38cd040f2b1c664946666c4a",
        "urls": [
          "bzz-raw://5dd325f05f6812218a7f808af5afc1ec6cf95f1250c33d4dd1ad01ec4b041d50",
          "dweb:/ipfs/Qmem29JZSEpYLDqJn4cBxawGokbzo3taqHtb3UyyDvmB8G"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/LM_PC_KPIRewarder_v2.sol": {
        "keccak256": "0xaa486304a9358daf1564b9972c264da12dde497bd679a8bc21a1d15046ce3bac",
        "urls": [
          "bzz-raw://b0ecfc7a82cd13c04ee15db05ac6b3cbf59f5c102528e39d3d135ff7d8afef08",
          "dweb:/ipfs/QmfPPD8WrQQSS4XBhzjUru7Ke4FHSEoW6VEKtNbmRJHFjd"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/LM_PC_Staking_v2.sol": {
        "keccak256": "0xe6508a557c6c3a8acc2fed435831bb6b944db9681fd13593cb2b53d7a5b10ef4",
        "urls": [
          "bzz-raw://3c418c8beeacf197cf5fdb3ab5156baa55a3add2afc025ff28ca2597e6095487",
          "dweb:/ipfs/QmTFxx1imu7U3MoZ2RLBT7LNq3jBdqbQ7jW5bWZjznQQTq"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/ERC20PaymentClientBase_v2.sol": {
        "keccak256": "0x325b0f101a119e5e591e0a634473f12c55a3bb912007539d293ecb7627cc232c",
        "urls": [
          "bzz-raw://0585c27673e5bdb6547599415b7678921594d2a7f76e2356caad8ffb050d4ec3",
          "dweb:/ipfs/QmbJGwtZVkSa1X4Dkk2Vfsf5Z6D41tyRLyqADzZNdockM4"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/IOptimisticOracleIntegrator.sol": {
        "keccak256": "0x440b316ad88141e6fadc3cb1505df9bd4d4fc998df472fd1fae612cc71ceb0af",
        "urls": [
          "bzz-raw://e87cae6ecaa56d1ee6b7544a29a2b0b3e2c8de044311ed964d638f6fbe34bbe3",
          "dweb:/ipfs/QmSzdJ3buR5nWFki77jZpchvZos25K1GY2VSx6FVPvv7s4"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/OptimisticOracleIntegrator.sol": {
        "keccak256": "0xcd3f5c011abfde4977beee9b583702f21be09e515bc40c86d128ea46630dc2db",
        "urls": [
          "bzz-raw://4b8c1d6c884906312c5e9540066ddb65bc2bf4cab7013fb00a5f019553b00474",
          "dweb:/ipfs/QmWe28z6xQmDMZpnNRu1Xz6zYxZvN8Gkwib9gTjSunhARx"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/ClaimData.sol": {
        "keccak256": "0x15ff9d5c58afe8172fb6e0177fa4214169749811b7aa4b6b8295647aefc77e80",
        "urls": [
          "bzz-raw://65d7a6e5fa55575b183b1ea0410d4fb2aee17eb2e1214be6f56810394839d060",
          "dweb:/ipfs/QmUkEea5rcn2vE3m1fJGFRHUJiSaHCZXYxQc5RqA8yguHe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3CallbackRecipientInterface.sol": {
        "keccak256": "0x74154dc8037b4f8b934e0df8d92a1110d571a00bdfc6bc485c3e1c5bf4bc9d02",
        "urls": [
          "bzz-raw://9e3f5e3cd3a262da4442fc55f8499cc9de2b4d751152405ac82a5098db22b27e",
          "dweb:/ipfs/QmWuALHseY4LWHNfZRWeE25Fu3ZZukZWMR1s32ggoKArcB"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/logicModule/abstracts/oracleIntegrations/UMA_OptimisticOracleV3/optimistic-oracle-v3/interfaces/OptimisticOracleV3Interface.sol": {
        "keccak256": "0xa224d49e21e46e2548bff547bcabbb950849ca9705c9149651e273a1be907760",
        "urls": [
          "bzz-raw://7ede70c9959f574b80d6fbc24bb3edab598c200b5402d8c2a7fc7f68193d1d7d",
          "dweb:/ipfs/QmVeQctwAzm9ACcKdxFs7kbuuUWtEzABen2GbakoecuYaf"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/modules/logicModule/interfaces/IERC20PaymentClientBase_v1.sol": {
        "keccak256": "0xe3a2f6fd8ad6b79d74174a07422a4e455f21a4dbd4b1adbff379e1b5374bef00",
        "urls": [
          "bzz-raw://88b49ae256b7f0c455b4915187c7fd42906ac817c571599d6e66052a9c5517b1",
          "dweb:/ipfs/QmcHBtkPEK5i55K6wdSiGyci9v1NULhZ3E4HKhaLtJGHFr"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/interfaces/IERC20PaymentClientBase_v2.sol": {
        "keccak256": "0x1399343fea0ca35abf73a9e2776281db7fb3c8611511b00faf1801deecdd63f2",
        "urls": [
          "bzz-raw://2add85157d2ec4722f71bb40ee1ed2a506d1cdbc7e4e3b9eaa0ce494f427c22b",
          "dweb:/ipfs/QmWVq7CVttekQuQDZwkCvApHEUydfKgYBXvBSCemxDJWke"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/interfaces/ILM_PC_KPIRewarder_v2.sol": {
        "keccak256": "0xf571275b7ae350c4e7d8631fdf98139d1a36cc9899fe8fad323cd63781094fae",
        "urls": [
          "bzz-raw://470af09473b192ab00ac4d83b01d6c53e7ec1cb29ffbb12d038d5e1469fe9c1f",
          "dweb:/ipfs/Qmaso3wwwoJ7tYpCBGwmvikKDTULz8YByQ9A1qee3ZdKYL"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/logicModule/interfaces/ILM_PC_Staking_v2.sol": {
        "keccak256": "0x1b4556835c533ac922b1f9142acce740fb3bb2469e8244aecc08667de80c688d",
        "urls": [
          "bzz-raw://194cfcb1ad59c7d035fd74582341339189fad02af9979d6a28861da084e89a01",
          "dweb:/ipfs/QmWrG567qwc51JJD3EJ18iqgQnBvpp94PVUHi7Np9yzKwx"
        ],
        "license": null
      },
      "src/modules/paymentProcessor/IPaymentProcessor_v1.sol": {
        "keccak256": "0xbe30278dcc494faf27c106a7fc89a25d40ad8d7fbc1b4af8d6a524f62286320e",
        "urls": [
          "bzz-raw://65d9bcbc6bafcf1388b43f46f57ac54fa20dc270a178dccefa364b15c786c7d0",
          "dweb:/ipfs/QmZchyENTGcCDiVUFKs1tY9BfRmaWgaMzxM5uM5LDHVPuc"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/modules/paymentProcessor/IPaymentProcessor_v2.sol": {
        "keccak256": "0x8d45f6d5dbb01beeee65158eef9520fab7bda09452fe836142122e37682daa9b",
        "urls": [
          "bzz-raw://39f706ba7c68d384c8d815ca737b9e024692e49bb9c930ea70b207d9bf23d4f9",
          "dweb:/ipfs/QmdYS1aCUmtWTymRaUGLR8e9YK7v4s9JMxPoaMMoMnebHD"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/orchestrator/interfaces/IModuleManagerBase_v1.sol": {
        "keccak256": "0x2abd1abb278da305c6a47d11ef31ef7a7de2aebf017957b0013497de8e2aa2eb",
        "urls": [
          "bzz-raw://5d49aac1e351f80bce5c27fb0934577d64551c25fcbad6dd172b6eee7b8bf57a",
          "dweb:/ipfs/QmRdR4Ut7gV9Zp295ciYnwYqjdXKxZAAegVhtsGpetiwsC"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/orchestrator/interfaces/IOrchestrator_v1.sol": {
        "keccak256": "0xefa7776b6fcebcd49da7398c0ebb56210138818e1e20baa4c174d1a5f45eca7f",
        "urls": [
          "bzz-raw://dde9c8d7982913b904aa0b27384958658ebcdd4b37fa70d409014d8b116f59dc",
          "dweb:/ipfs/QmfJtQvdSyTkzonanLABKVvRp13bqGQRWu4ZfeRGfqRmAn"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/proxies/interfaces/IInverterBeacon_v1.sol": {
        "keccak256": "0x23cd7a4ada497ebd9834d521843673881427d563906662156e748366a6a03fb5",
        "urls": [
          "bzz-raw://49cbce7e794b38126494ee0c4a26f9807fc284e0e5c59ad8a1a229e60f196e66",
          "dweb:/ipfs/Qma3hZfASQ6Gaa4anDhTmhNA1HPiYSD6eJ9Gnn817rP8VJ"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "id": 155
}
